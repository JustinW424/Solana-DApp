[{"F:\\jobs\\stake_in_solana\\source\\src\\index.tsx":"1","F:\\jobs\\stake_in_solana\\source\\src\\reportWebVitals.ts":"2","F:\\jobs\\stake_in_solana\\source\\src\\App.tsx":"3","F:\\jobs\\stake_in_solana\\source\\src\\utils\\tokens.tsx":"4","F:\\jobs\\stake_in_solana\\source\\src\\pages\\MyNode.tsx":"5","F:\\jobs\\stake_in_solana\\source\\src\\pages\\Lockup.tsx":"6","F:\\jobs\\stake_in_solana\\source\\src\\pages\\Multisig.tsx":"7","F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\Layout.tsx":"8","F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\WalletProvider.tsx":"9","F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\BootstrapProvider.tsx":"10","F:\\jobs\\stake_in_solana\\source\\src\\store\\index.ts":"11","F:\\jobs\\stake_in_solana\\source\\src\\store\\config.ts":"12","F:\\jobs\\stake_in_solana\\source\\src\\store\\reducer.ts":"13","F:\\jobs\\stake_in_solana\\source\\src\\utils\\registry.ts":"14","F:\\jobs\\stake_in_solana\\source\\src\\store\\actions.ts":"15","F:\\jobs\\stake_in_solana\\source\\src\\idl\\multisig.ts":"16","F:\\jobs\\stake_in_solana\\source\\src\\idl\\registry.ts":"17","F:\\jobs\\stake_in_solana\\source\\src\\idl\\lockup.ts":"18","F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\MyNode.tsx":"19","F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\Footer.tsx":"20","F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\Header.tsx":"21","F:\\jobs\\stake_in_solana\\source\\src\\components\\lockups\\Vestings.tsx":"22","F:\\jobs\\stake_in_solana\\source\\src\\components\\multisig\\Multisig.tsx":"23","F:\\jobs\\stake_in_solana\\source\\src\\utils\\lockup.ts":"24","F:\\jobs\\stake_in_solana\\source\\src\\utils\\idl.ts":"25","F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\VestingAccountsSelect.tsx":"26","F:\\jobs\\stake_in_solana\\source\\src\\components\\Stake.tsx":"27","F:\\jobs\\stake_in_solana\\source\\src\\components\\Me.tsx":"28","F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\RegistrarSelect.tsx":"29","F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\OwnedTokenAccountsSelect.tsx":"30","F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\Notification.tsx":"31","F:\\jobs\\stake_in_solana\\source\\src\\components\\rewards\\Rewards.tsx":"32","F:\\jobs\\stake_in_solana\\source\\src\\components\\rewards\\ClaimRewardButton.tsx":"33","F:\\jobs\\stake_in_solana\\source\\src\\components\\rewards\\RewardsList.tsx":"34","F:\\jobs\\stake_in_solana\\source\\src\\components\\rewards\\DropRewardButton.tsx":"35","F:\\jobs\\stake_in_solana\\source\\src\\skin\\index.ts":"36","F:\\jobs\\stake_in_solana\\source\\src\\components\\lockups\\VestingAccountCard.tsx":"37","F:\\jobs\\stake_in_solana\\source\\src\\components\\lockups\\NewVesting.tsx":"38"},{"size":501,"mtime":1632188436000,"results":"39","hashOfConfig":"40"},{"size":425,"mtime":1632188436000,"results":"41","hashOfConfig":"40"},{"size":1962,"mtime":1632188436000,"results":"42","hashOfConfig":"40"},{"size":1841,"mtime":1632188436000,"results":"43","hashOfConfig":"40"},{"size":140,"mtime":1632188436000,"results":"44","hashOfConfig":"40"},{"size":147,"mtime":1632188436000,"results":"45","hashOfConfig":"40"},{"size":587,"mtime":1632188436000,"results":"46","hashOfConfig":"40"},{"size":4451,"mtime":1639585309000,"results":"47","hashOfConfig":"40"},{"size":3839,"mtime":1632188436000,"results":"48","hashOfConfig":"40"},{"size":15957,"mtime":1632188436000,"results":"49","hashOfConfig":"40"},{"size":114,"mtime":1632188436000,"results":"50","hashOfConfig":"40"},{"size":3599,"mtime":1639586421000,"results":"51","hashOfConfig":"40"},{"size":6594,"mtime":1632188436000,"results":"52","hashOfConfig":"40"},{"size":3431,"mtime":1639735267058,"results":"53","hashOfConfig":"40"},{"size":703,"mtime":1632188436000,"results":"54","hashOfConfig":"40"},{"size":5613,"mtime":1632188436000,"results":"55","hashOfConfig":"40"},{"size":30561,"mtime":1632188436000,"results":"56","hashOfConfig":"40"},{"size":11310,"mtime":1632188436000,"results":"57","hashOfConfig":"40"},{"size":26732,"mtime":1639796039857,"results":"58","hashOfConfig":"40"},{"size":1976,"mtime":1632188436000,"results":"59","hashOfConfig":"40"},{"size":9702,"mtime":1639585610000,"results":"60","hashOfConfig":"40"},{"size":3700,"mtime":1632188436000,"results":"61","hashOfConfig":"40"},{"size":39659,"mtime":1632188436000,"results":"62","hashOfConfig":"40"},{"size":1246,"mtime":1632188436000,"results":"63","hashOfConfig":"40"},{"size":913,"mtime":1632188436000,"results":"64","hashOfConfig":"40"},{"size":2365,"mtime":1632188436000,"results":"65","hashOfConfig":"40"},{"size":23238,"mtime":1632188436000,"results":"66","hashOfConfig":"40"},{"size":5348,"mtime":1632188436000,"results":"67","hashOfConfig":"40"},{"size":4780,"mtime":1632188436000,"results":"68","hashOfConfig":"40"},{"size":2285,"mtime":1632188436000,"results":"69","hashOfConfig":"40"},{"size":1356,"mtime":1632188436000,"results":"70","hashOfConfig":"40"},{"size":4681,"mtime":1632188436000,"results":"71","hashOfConfig":"40"},{"size":7000,"mtime":1632188436000,"results":"72","hashOfConfig":"40"},{"size":8336,"mtime":1632188436000,"results":"73","hashOfConfig":"40"},{"size":16707,"mtime":1632188436000,"results":"74","hashOfConfig":"40"},{"size":313,"mtime":1632188436000,"results":"75","hashOfConfig":"40"},{"size":14756,"mtime":1632188436000,"results":"76","hashOfConfig":"40"},{"size":13312,"mtime":1632188436000,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"9f4si8",{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"F:\\jobs\\stake_in_solana\\source\\src\\index.tsx",[],["157","158"],"F:\\jobs\\stake_in_solana\\source\\src\\reportWebVitals.ts",[],"F:\\jobs\\stake_in_solana\\source\\src\\App.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\utils\\tokens.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\pages\\MyNode.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\pages\\Lockup.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\pages\\Multisig.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\Layout.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\WalletProvider.tsx",["159"],"import React, {\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n  useMemo,\n  useContext,\n} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  PublicKey,\n  Transaction,\n  Connection,\n  ConfirmOptions,\n} from \"@solana/web3.js\";\nimport { Provider } from \"@project-serum/common\";\nimport { Program } from \"@project-serum/anchor\";\nimport { WalletProvider as SolanaWalletProvider } from \"@solana/wallet-adapter-react\";\nimport {\n  getPhantomWallet,\n  getSolflareWallet,\n  getSolletWallet,\n} from \"@solana/wallet-adapter-wallets\";\nimport { State as StoreState } from \"../../store/reducer\";\nimport LockupIdl from \"../../idl/lockup\";\nimport RegistryIdl from \"../../idl/registry\";\nimport MultisigIdl from \"../../idl/multisig\";\nimport { useWallet as useSolana } from \"@solana/wallet-adapter-react\";\nimport { WalletAdapter } from \"@solana/wallet-adapter-base\";\n\nexport function useWallet(): WalletContextValues {\n  const w = useContext(WalletContext);\n  if (!w) {\n    throw new Error(\"Missing wallet context\");\n  }\n  return w;\n}\n\nconst WalletContext = React.createContext<null | WalletContextValues>(null);\n\ntype WalletContextValues = {\n  wallet: Wallet;\n  lockupClient: Program;\n  registryClient: Program;\n\tmultisigClient: Program;\n};\n\nexport default function WalletProvider(\n  props: PropsWithChildren<ReactNode>\n): ReactElement {\n  const wallets = useMemo(\n    () => [getPhantomWallet(), getSolflareWallet(), getSolletWallet()],\n    []\n  );\n\n  return (\n    <SolanaWalletProvider wallets={wallets}>\n      <WalletProviderInner {...props} />\n    </SolanaWalletProvider>\n  );\n}\n\nfunction WalletProviderInner(props: PropsWithChildren<ReactNode>) {\n  const { wallet: solWallet } = useSolana();\n  const { walletProvider, network } = useSelector((state: StoreState) => {\n    return {\n      walletProvider: state.common.walletProvider,\n      network: state.common.network,\n    };\n  });\n  const { wallet, lockupClient, registryClient, multisigClient } =\n    useMemo(() => {\n      const opts: ConfirmOptions = {\n        preflightCommitment: \"recent\",\n        commitment: \"recent\",\n      };\n      const connection = new Connection(network.url, opts.preflightCommitment);\n      const wallet = new Wallet(solWallet ? solWallet.adapter() : undefined);\n      // @ts-ignore\n      const provider = new Provider(connection, wallet, opts);\n\n      const lockupClient = new Program(\n        LockupIdl,\n        network.lockupProgramId,\n        provider\n      );\n      const registryClient = new Program(\n        RegistryIdl,\n        network.registryProgramId,\n        provider\n      );\n      const multisigClient = new Program(\n        MultisigIdl,\n        network.multisigProgramId,\n        provider,\n      );\n      return {\n        wallet,\n        lockupClient,\n        registryClient,\n        multisigClient,\n      };\n    }, [solWallet, walletProvider, network]);\n\n  return (\n    <WalletContext.Provider\n      value={{ wallet, lockupClient, registryClient, multisigClient }}\n    >\n      {props.children}\n    </WalletContext.Provider>\n  );\n}\n\nclass Wallet {\n  get publicKey(): PublicKey | undefined {\n    // @ts-ignore\n    return this.adapter ? this.adapter.publicKey : undefined;\n  }\n\n  constructor(readonly adapter: WalletAdapter | undefined) {}\n\n  on(event: any, cb: any) {\n    if (this.adapter) {\n      return this.adapter.on(event, cb);\n    }\n  }\n\n  async connect() {\n    if (this.adapter) {\n      try {\n        await this.adapter.connect();\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n\n  disconnect() {\n    if (this.adapter) {\n      this.adapter.disconnect();\n    }\n  }\n\n  signTransaction(tx: Transaction) {\n    if (this.adapter) {\n      return this.adapter.signTransaction(tx);\n    }\n  }\n\n  signAllTransactions(txs: Transaction[]) {\n    if (this.adapter) {\n      return this.adapter.signAllTransactions(txs);\n    }\n  }\n}\n","F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\BootstrapProvider.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\store\\index.ts",[],"F:\\jobs\\stake_in_solana\\source\\src\\store\\config.ts",[],"F:\\jobs\\stake_in_solana\\source\\src\\store\\reducer.ts",[],"F:\\jobs\\stake_in_solana\\source\\src\\utils\\registry.ts",[],"F:\\jobs\\stake_in_solana\\source\\src\\store\\actions.ts",[],"F:\\jobs\\stake_in_solana\\source\\src\\idl\\multisig.ts",[],"F:\\jobs\\stake_in_solana\\source\\src\\idl\\registry.ts",[],"F:\\jobs\\stake_in_solana\\source\\src\\idl\\lockup.ts",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\MyNode.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\Footer.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\Header.tsx",["160","161","162","163","164","165","166"],"import React, { useState, useEffect, ReactElement } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSnackbar } from \"notistack\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Select from \"@material-ui/core/Select\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport Button from \"@material-ui/core/Button\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport BubbleChartIcon from \"@material-ui/icons/BubbleChart\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  WalletDialogProvider,\n  WalletDisconnectButton,\n  WalletMultiButton,\n} from \"@solana/wallet-adapter-material-ui\";\nimport { Popper, MenuList, MenuItem, Grow } from \"@material-ui/core\";\nimport { refreshAccounts } from \"./BootstrapProvider\";\nimport { networks } from \"../../store/config\";\nimport {\n  State as StoreState,\n  ProgramAccount,\n  BootstrapState,\n} from \"../../store/reducer\";\nimport { ActionType } from \"../../store/actions\";\nimport { useWallet } from \"./WalletProvider\";\n\ntype HeaderProps = {\n  isAppReady: boolean;\n  member?: ProgramAccount;\n};\n\nexport default function Header(props: HeaderProps) {\n  const { isAppReady } = props;\n  const { network } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      isAppReady:\n        state.common.isWalletConnected &&\n        state.common.bootstrapState === BootstrapState.Bootstrapped,\n    };\n  });\n  const dispatch = useDispatch();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { wallet, registryClient, lockupClient } = useWallet();\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  return (\n    <AppBar\n      position=\"static\"\n      style={{\n        background: \"#ffffff\",\n        color: \"#272727\",\n        boxShadow: \"none\",\n        borderBottom: \"solid 1pt #ccc\",\n      }}\n    >\n      <Toolbar>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            width: \"100%\",\n          }}\n        >\n          <div style={{ display: \"flex\" }}>\n            <SerumLogoButton />\n            <BarButton label=\"Stake\" hrefClient=\"/stake\" />\n            <BarButton label=\"Presale\" hrefClient=\"https://greatlegendary.com/presale/\" />\n            <BarButton label=\"Market\" hrefClient=\"https://market.greatlegendary.com/\" />\n            <BarButton label=\"Whitepaper\" hrefClient=\"https://whitepaper.greatlegendary.com/\" />\n            {/* <BarButton label=\"Lockup\" hrefClient=\"/lockup\" />\n            <BarButton\n              label=\"Multisig\"\n              href=\"https://multisig.projectserum.com\"\n            />\n            <BarButton label=\"Trade\" href=\"https://dex.projectserum.com\" />\n            {network.srmFaucet && (\n              <BarButton\n                label=\"Faucet\"\n                href=\"https://www.spl-token-ui.com/#/token-faucets\"\n              />\n            )} */}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n            }}\n          >\n            <div\n              onClick={() => {\n                setIsRefreshing(true);\n                enqueueSnackbar(`Refreshing`, {\n                  variant: \"info\",\n                });\n                refreshAccounts({\n                  dispatch,\n                  lockupClient,\n                  registryClient,\n                  network,\n                  wallet,\n                })\n                  .then(() => {\n                    setIsRefreshing(false);\n                    closeSnackbar();\n                  })\n                  .catch((err) => {\n                    setIsRefreshing(false);\n                    closeSnackbar();\n                    enqueueSnackbar(`There was a problem refreshing: ${err}`, {\n                      variant: \"error\",\n                      autoHideDuration: 2500,\n                    });\n                  });\n              }}\n              style={{\n                display: isAppReady ? \"block\" : \"none\",\n                justifyContent: \"center\",\n                flexDirection: \"column\",\n                marginRight: \"10px\",\n              }}\n            >\n              {isRefreshing ? (\n                <div\n                  style={{\n                    marginTop: \"8px\",\n                    padding: \"10px\",\n                  }}\n                >\n                  <CircularProgress style={{ width: \"24px\", height: \"24px\" }} />\n                </div>\n              ) : (\n                <div>\n                  <IconButton>\n                    <RefreshIcon />\n                  </IconButton>\n                </div>\n              )}\n            </div>\n            <NetworkSelector />\n            <WalletConnectButton />\n          </div>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nfunction SerumLogoButton() {\n  const history = useHistory();\n  return (\n    <div style={{ display: \"flex\" }} onClick={() => history.push(\"/\")}>\n      <Button color=\"inherit\">\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <img\n            style={{\n              display: \"block\",\n              height: \"35px\",\n            }}\n            alt=\"Logo\"\n            src=\"https://greatlegendary.com/wp-content/uploads/2021/11/logo-300x180.png\"\n          />\n        </div>\n      </Button>\n    </div>\n  );\n}\n\ntype BarButtonProps = {\n  label: string;\n  hrefClient?: string;\n  href?: string;\n};\n\nfunction BarButton(props: BarButtonProps) {\n  const history = useHistory();\n  const { label, href, hrefClient } = props;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n      onClick={() => hrefClient && history.push(hrefClient)}\n    >\n      <Link\n        style={{ color: \"inherit\", textDecoration: \"none\" }}\n        href={href}\n        target=\"_blank\"\n      >\n        <Button color=\"inherit\">\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Typography style={{ fontSize: \"15px\" }}>{label}</Typography>\n          </div>\n        </Button>\n      </Link>\n    </div>\n  );\n}\n\nfunction NetworkSelector() {\n  const network = useSelector((state: StoreState) => {\n    return state.common.network;\n  });\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div\n      style={{\n        marginRight: \"10px\",\n        fontSize: \"15px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Button\n        color=\"inherit\"\n        onClick={(e) =>\n          setAnchorEl(\n            // @ts-ignore\n            e.currentTarget\n          )\n        }\n      >\n        <BubbleChartIcon />\n        <Typography style={{ marginLeft: \"5px\", fontSize: \"15px\" }}>\n          {network.label}\n        </Typography>\n      </Button>\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        style={{\n          marginLeft: \"12px\",\n          color: \"white\",\n        }}\n      >\n        {Object.keys(networks).map((n: string) => (\n          <MenuItem\n            key={n}\n            onClick={() => {\n              handleClose();\n              dispatch({\n                type: ActionType.CommonSetNetwork,\n                item: {\n                  network: networks[n],\n                  networkKey: n,\n                },\n              });\n            }}\n          >\n            <Typography>{networks[n].label}</Typography>\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n\nexport function WalletConnectButton(): ReactElement {\n  const { showDisconnect } = useSelector((state: StoreState) => {\n    return {\n      showDisconnect: state.common.isWalletConnected,\n    };\n  });\n  const dispatch = useDispatch();\n  const { wallet, lockupClient } = useWallet();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Wallet connection event listeners.\n  useEffect(() => {\n    wallet.on(\"disconnect\", () => {\n      enqueueSnackbar(\"Disconnected from wallet\", {\n        variant: \"info\",\n        autoHideDuration: 2500,\n      });\n      dispatch({\n        type: ActionType.CommonWalletDidDisconnect,\n        item: {},\n      });\n      dispatch({\n        type: ActionType.CommonTriggerShutdown,\n        item: {},\n      });\n    });\n    wallet.on(\"connect\", async () => {\n      dispatch({\n        type: ActionType.CommonWalletDidConnect,\n        item: {},\n      });\n      dispatch({\n        type: ActionType.CommonTriggerBootstrap,\n        item: {},\n      });\n    });\n  }, [wallet, dispatch, enqueueSnackbar, lockupClient.provider.connection]);\n\n  return (\n    <WalletDialogProvider>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n        onClick={() => wallet.disconnect()}\n      >\n        <WalletDisconnectButton />\n      </div>\n      <div\n        onClick={() => wallet.connect()}\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <WalletMultiButton />\n      </div>\n    </WalletDialogProvider>\n  );\n}\n","F:\\jobs\\stake_in_solana\\source\\src\\components\\lockups\\Vestings.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\multisig\\Multisig.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\utils\\lockup.ts",[],"F:\\jobs\\stake_in_solana\\source\\src\\utils\\idl.ts",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\VestingAccountsSelect.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\Stake.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\Me.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\RegistrarSelect.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\OwnedTokenAccountsSelect.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\common\\Notification.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\rewards\\Rewards.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\rewards\\ClaimRewardButton.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\rewards\\RewardsList.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\rewards\\DropRewardButton.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\skin\\index.ts",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\lockups\\VestingAccountCard.tsx",[],"F:\\jobs\\stake_in_solana\\source\\src\\components\\lockups\\NewVesting.tsx",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":102,"column":8,"nodeType":"173","endLine":102,"endColumn":44,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":14},{"ruleId":"175","severity":1,"message":"179","line":12,"column":8,"nodeType":"177","messageId":"178","endLine":12,"endColumn":21},{"ruleId":"175","severity":1,"message":"180","line":14,"column":8,"nodeType":"177","messageId":"178","endLine":14,"endColumn":18},{"ruleId":"175","severity":1,"message":"181","line":23,"column":10,"nodeType":"177","messageId":"178","endLine":23,"endColumn":16},{"ruleId":"175","severity":1,"message":"182","line":23,"column":18,"nodeType":"177","messageId":"178","endLine":23,"endColumn":26},{"ruleId":"175","severity":1,"message":"183","line":23,"column":38,"nodeType":"177","messageId":"178","endLine":23,"endColumn":42},{"ruleId":"175","severity":1,"message":"184","line":286,"column":11,"nodeType":"177","messageId":"178","endLine":286,"endColumn":25},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"react-hooks/exhaustive-deps","React Hook useMemo has an unnecessary dependency: 'walletProvider'. Either exclude it or remove the dependency array.","ArrayExpression",["187"],"@typescript-eslint/no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","'ExitToAppIcon' is defined but never used.","'PersonIcon' is defined but never used.","'Popper' is defined but never used.","'MenuList' is defined but never used.","'Grow' is defined but never used.","'showDisconnect' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},"Update the dependencies array to be: [solWallet, network]",{"range":"190","text":"191"},[2813,2849],"[solWallet, network]"]