"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const camelcase_1 = __importDefault(require("camelcase"));
const web3_js_1 = require("@solana/web3.js");
const program_1 = require("./program");
let _populatedWorkspace = false;
// Workspace program discovery only works for node environments.
exports.default = new Proxy({}, {
    get(workspaceCache, programName) {
        const find = require("find");
        const fs = require("fs");
        const process = require("process");
        if (typeof window !== "undefined") {
            // Workspaces aren't available in the browser, yet.
            return undefined;
        }
        if (!_populatedWorkspace) {
            const path = require("path");
            let projectRoot = process.cwd();
            while (!fs.existsSync(path.join(projectRoot, "Anchor.toml"))) {
                const parentDir = path.dirname(projectRoot);
                if (parentDir === projectRoot) {
                    projectRoot = undefined;
                }
                projectRoot = parentDir;
            }
            if (projectRoot === undefined) {
                throw new Error("Could not find workspace root. Perhaps set the `OASIS_WORKSPACE` env var?");
            }
            find
                .fileSync(/target\/idl\/.*\.json/, projectRoot)
                .reduce((programs, path) => {
                const idlStr = fs.readFileSync(path);
                const idl = JSON.parse(idlStr);
                const name = camelcase_1.default(idl.name, { pascalCase: true });
                programs[name] = new program_1.Program(idl, new web3_js_1.PublicKey(idl.metadata.address));
                return programs;
            }, workspaceCache);
            _populatedWorkspace = true;
        }
        return workspaceCache[programName];
    },
});
//# sourceMappingURL=workspace.js.map