{"ast":null,"code":"const idl = {\n  version: '0.0.0',\n  name: 'lockup',\n  instructions: [{\n    name: 'createVesting',\n    accounts: [{\n      name: 'vesting',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'vault',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'depositor',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'depositorAuthority',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'tokenProgram',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'rent',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'clock',\n      isMut: false,\n      isSigner: false\n    }],\n    args: [{\n      name: 'beneficiary',\n      type: 'publicKey'\n    }, {\n      name: 'depositAmount',\n      type: 'u64'\n    }, {\n      name: 'nonce',\n      type: 'u8'\n    }, {\n      name: 'startTs',\n      type: 'i64'\n    }, {\n      name: 'endTs',\n      type: 'i64'\n    }, {\n      name: 'periodCount',\n      type: 'u64'\n    }, {\n      name: 'realizor',\n      type: {\n        option: {\n          defined: 'Realizor'\n        }\n      }\n    }]\n  }, {\n    name: 'withdraw',\n    accounts: [{\n      name: 'vesting',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'beneficiary',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'vault',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'vestingSigner',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'token',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'tokenProgram',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'clock',\n      isMut: false,\n      isSigner: false\n    }],\n    args: [{\n      name: 'amount',\n      type: 'u64'\n    }]\n  }, {\n    name: 'whitelistWithdraw',\n    accounts: [{\n      name: 'transfer',\n      accounts: [{\n        name: 'lockup',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'beneficiary',\n        isMut: false,\n        isSigner: true\n      }, {\n        name: 'whitelistedProgram',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'vesting',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vestingSigner',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'tokenProgram',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'whitelistedProgramVault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'whitelistedProgramVaultAuthority',\n        isMut: false,\n        isSigner: false\n      }]\n    }],\n    args: [{\n      name: 'instructionData',\n      type: 'bytes'\n    }, {\n      name: 'amount',\n      type: 'u64'\n    }]\n  }, {\n    name: 'whitelistDeposit',\n    accounts: [{\n      name: 'transfer',\n      accounts: [{\n        name: 'lockup',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'beneficiary',\n        isMut: false,\n        isSigner: true\n      }, {\n        name: 'whitelistedProgram',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'vesting',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vestingSigner',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'tokenProgram',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'whitelistedProgramVault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'whitelistedProgramVaultAuthority',\n        isMut: false,\n        isSigner: false\n      }]\n    }],\n    args: [{\n      name: 'instructionData',\n      type: 'bytes'\n    }]\n  }, {\n    name: 'availableForWithdrawal',\n    accounts: [{\n      name: 'vesting',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'clock',\n      isMut: false,\n      isSigner: false\n    }],\n    args: []\n  }],\n  state: {\n    struct: {\n      name: 'Lockup',\n      type: {\n        kind: 'struct',\n        fields: [{\n          name: 'authority',\n          type: 'publicKey'\n        }, {\n          name: 'whitelist',\n          type: {\n            vec: {\n              defined: 'WhitelistEntry'\n            }\n          }\n        }]\n      }\n    },\n    methods: [{\n      name: 'new',\n      accounts: [{\n        name: 'authority',\n        isMut: false,\n        isSigner: true\n      }],\n      args: []\n    }, {\n      name: 'whitelistAdd',\n      accounts: [{\n        name: 'authority',\n        isMut: false,\n        isSigner: true\n      }],\n      args: [{\n        name: 'entry',\n        type: {\n          defined: 'WhitelistEntry'\n        }\n      }]\n    }, {\n      name: 'whitelistDelete',\n      accounts: [{\n        name: 'authority',\n        isMut: false,\n        isSigner: true\n      }],\n      args: [{\n        name: 'entry',\n        type: {\n          defined: 'WhitelistEntry'\n        }\n      }]\n    }, {\n      name: 'setAuthority',\n      accounts: [{\n        name: 'authority',\n        isMut: false,\n        isSigner: true\n      }],\n      args: [{\n        name: 'newAuthority',\n        type: 'publicKey'\n      }]\n    }]\n  },\n  accounts: [{\n    name: 'Vesting',\n    type: {\n      kind: 'struct',\n      fields: [{\n        name: 'beneficiary',\n        type: 'publicKey'\n      }, {\n        name: 'mint',\n        type: 'publicKey'\n      }, {\n        name: 'vault',\n        type: 'publicKey'\n      }, {\n        name: 'grantor',\n        type: 'publicKey'\n      }, {\n        name: 'outstanding',\n        type: 'u64'\n      }, {\n        name: 'startBalance',\n        type: 'u64'\n      }, {\n        name: 'createdTs',\n        type: 'i64'\n      }, {\n        name: 'startTs',\n        type: 'i64'\n      }, {\n        name: 'endTs',\n        type: 'i64'\n      }, {\n        name: 'periodCount',\n        type: 'u64'\n      }, {\n        name: 'whitelistOwned',\n        type: 'u64'\n      }, {\n        name: 'nonce',\n        type: 'u8'\n      }, {\n        name: 'realizor',\n        type: {\n          option: {\n            defined: 'Realizor'\n          }\n        }\n      }]\n    }\n  }],\n  types: [{\n    name: 'Realizor',\n    type: {\n      kind: 'struct',\n      fields: [{\n        name: 'program',\n        type: 'publicKey'\n      }, {\n        name: 'metadata',\n        type: 'publicKey'\n      }]\n    }\n  }, {\n    name: 'WhitelistEntry',\n    type: {\n      kind: 'struct',\n      fields: [{\n        name: 'programId',\n        type: 'publicKey'\n      }]\n    }\n  }],\n  errors: [{\n    code: 100,\n    name: 'InvalidTimestamp',\n    msg: 'Vesting end must be greater than the current unix timestamp.'\n  }, {\n    code: 101,\n    name: 'InvalidPeriod',\n    msg: 'The number of vesting periods must be greater than zero.'\n  }, {\n    code: 102,\n    name: 'InvalidDepositAmount',\n    msg: 'The vesting deposit amount must be greater than zero.'\n  }, {\n    code: 103,\n    name: 'InvalidWhitelistEntry',\n    msg: 'The Whitelist entry is not a valid program address.'\n  }, {\n    code: 104,\n    name: 'InvalidProgramAddress',\n    msg: 'Invalid program address. Did you provide the correct nonce?'\n  }, {\n    code: 105,\n    name: 'InvalidVaultOwner',\n    msg: 'Invalid vault owner.'\n  }, {\n    code: 106,\n    name: 'InvalidVaultAmount',\n    msg: 'Vault amount must be zero.'\n  }, {\n    code: 107,\n    name: 'InsufficientWithdrawalBalance',\n    msg: 'Insufficient withdrawal balance.'\n  }, {\n    code: 108,\n    name: 'WhitelistFull',\n    msg: 'Whitelist is full'\n  }, {\n    code: 109,\n    name: 'WhitelistEntryAlreadyExists',\n    msg: 'Whitelist entry already exists'\n  }, {\n    code: 110,\n    name: 'InsufficientWhitelistDepositAmount',\n    msg: 'Balance must go up when performing a whitelist deposit'\n  }, {\n    code: 111,\n    name: 'WhitelistDepositOverflow',\n    msg: 'Cannot deposit more than withdrawn'\n  }, {\n    code: 112,\n    name: 'WhitelistWithdrawLimit',\n    msg: 'Tried to withdraw over the specified limit'\n  }, {\n    code: 113,\n    name: 'WhitelistEntryNotFound',\n    msg: 'Whitelist entry not found.'\n  }, {\n    code: 114,\n    name: 'Unauthorized',\n    msg: 'You do not have sufficient permissions to perform this action.'\n  }, {\n    code: 115,\n    name: 'UnableToWithdrawWhileStaked',\n    msg: 'You are unable to realize projected rewards until unstaking.'\n  }, {\n    code: 116,\n    name: 'InvalidLockRealizor',\n    msg: \"The given lock realizor doesn't match the vesting account.\"\n  }, {\n    code: 117,\n    name: 'UnrealizedVesting',\n    msg: 'You have not realized this vesting account.'\n  }, {\n    code: 118,\n    name: 'InvalidSchedule',\n    msg: 'Invalid vesting schedule given.'\n  }]\n};\nexport default idl;","map":{"version":3,"sources":["F:/jobs/stake_in_solana/source/src/idl/lockup.ts"],"names":["idl","version","name","instructions","accounts","isMut","isSigner","args","type","option","defined","state","struct","kind","fields","vec","methods","types","errors","code","msg"],"mappings":"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","sourcesContent":["import { Idl } from '@project-serum/anchor';\n\nconst idl: Idl = {\n  version: '0.0.0',\n  name: 'lockup',\n  instructions: [\n    {\n      name: 'createVesting',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositorAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'beneficiary',\n          type: 'publicKey',\n        },\n        {\n          name: 'depositAmount',\n          type: 'u64',\n        },\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n        {\n          name: 'startTs',\n          type: 'i64',\n        },\n        {\n          name: 'endTs',\n          type: 'i64',\n        },\n        {\n          name: 'periodCount',\n          type: 'u64',\n        },\n        {\n          name: 'realizor',\n          type: {\n            option: {\n              defined: 'Realizor',\n            },\n          },\n        },\n      ],\n    },\n    {\n      name: 'withdraw',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vestingSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'token',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'whitelistWithdraw',\n      accounts: [\n        {\n          name: 'transfer',\n          accounts: [\n            {\n              name: 'lockup',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'beneficiary',\n              isMut: false,\n              isSigner: true,\n            },\n            {\n              name: 'whitelistedProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'vesting',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vestingSigner',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'tokenProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'whitelistedProgramVault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'whitelistedProgramVaultAuthority',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n      ],\n      args: [\n        {\n          name: 'instructionData',\n          type: 'bytes',\n        },\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'whitelistDeposit',\n      accounts: [\n        {\n          name: 'transfer',\n          accounts: [\n            {\n              name: 'lockup',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'beneficiary',\n              isMut: false,\n              isSigner: true,\n            },\n            {\n              name: 'whitelistedProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'vesting',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vestingSigner',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'tokenProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'whitelistedProgramVault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'whitelistedProgramVaultAuthority',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n      ],\n      args: [\n        {\n          name: 'instructionData',\n          type: 'bytes',\n        },\n      ],\n    },\n    {\n      name: 'availableForWithdrawal',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n  ],\n  state: {\n    struct: {\n      name: 'Lockup',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'authority',\n            type: 'publicKey',\n          },\n          {\n            name: 'whitelist',\n            type: {\n              vec: {\n                defined: 'WhitelistEntry',\n              },\n            },\n          },\n        ],\n      },\n    },\n    methods: [\n      {\n        name: 'new',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [],\n      },\n      {\n        name: 'whitelistAdd',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [\n          {\n            name: 'entry',\n            type: {\n              defined: 'WhitelistEntry',\n            },\n          },\n        ],\n      },\n      {\n        name: 'whitelistDelete',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [\n          {\n            name: 'entry',\n            type: {\n              defined: 'WhitelistEntry',\n            },\n          },\n        ],\n      },\n      {\n        name: 'setAuthority',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [\n          {\n            name: 'newAuthority',\n            type: 'publicKey',\n          },\n        ],\n      },\n    ],\n  },\n  accounts: [\n    {\n      name: 'Vesting',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'beneficiary',\n            type: 'publicKey',\n          },\n          {\n            name: 'mint',\n            type: 'publicKey',\n          },\n          {\n            name: 'vault',\n            type: 'publicKey',\n          },\n          {\n            name: 'grantor',\n            type: 'publicKey',\n          },\n          {\n            name: 'outstanding',\n            type: 'u64',\n          },\n          {\n            name: 'startBalance',\n            type: 'u64',\n          },\n          {\n            name: 'createdTs',\n            type: 'i64',\n          },\n          {\n            name: 'startTs',\n            type: 'i64',\n          },\n          {\n            name: 'endTs',\n            type: 'i64',\n          },\n          {\n            name: 'periodCount',\n            type: 'u64',\n          },\n          {\n            name: 'whitelistOwned',\n            type: 'u64',\n          },\n          {\n            name: 'nonce',\n            type: 'u8',\n          },\n          {\n            name: 'realizor',\n            type: {\n              option: {\n                defined: 'Realizor',\n              },\n            },\n          },\n        ],\n      },\n    },\n  ],\n  types: [\n    {\n      name: 'Realizor',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'program',\n            type: 'publicKey',\n          },\n          {\n            name: 'metadata',\n            type: 'publicKey',\n          },\n        ],\n      },\n    },\n    {\n      name: 'WhitelistEntry',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'programId',\n            type: 'publicKey',\n          },\n        ],\n      },\n    },\n  ],\n  errors: [\n    {\n      code: 100,\n      name: 'InvalidTimestamp',\n      msg: 'Vesting end must be greater than the current unix timestamp.',\n    },\n    {\n      code: 101,\n      name: 'InvalidPeriod',\n      msg: 'The number of vesting periods must be greater than zero.',\n    },\n    {\n      code: 102,\n      name: 'InvalidDepositAmount',\n      msg: 'The vesting deposit amount must be greater than zero.',\n    },\n    {\n      code: 103,\n      name: 'InvalidWhitelistEntry',\n      msg: 'The Whitelist entry is not a valid program address.',\n    },\n    {\n      code: 104,\n      name: 'InvalidProgramAddress',\n      msg: 'Invalid program address. Did you provide the correct nonce?',\n    },\n    {\n      code: 105,\n      name: 'InvalidVaultOwner',\n      msg: 'Invalid vault owner.',\n    },\n    {\n      code: 106,\n      name: 'InvalidVaultAmount',\n      msg: 'Vault amount must be zero.',\n    },\n    {\n      code: 107,\n      name: 'InsufficientWithdrawalBalance',\n      msg: 'Insufficient withdrawal balance.',\n    },\n    {\n      code: 108,\n      name: 'WhitelistFull',\n      msg: 'Whitelist is full',\n    },\n    {\n      code: 109,\n      name: 'WhitelistEntryAlreadyExists',\n      msg: 'Whitelist entry already exists',\n    },\n    {\n      code: 110,\n      name: 'InsufficientWhitelistDepositAmount',\n      msg: 'Balance must go up when performing a whitelist deposit',\n    },\n    {\n      code: 111,\n      name: 'WhitelistDepositOverflow',\n      msg: 'Cannot deposit more than withdrawn',\n    },\n    {\n      code: 112,\n      name: 'WhitelistWithdrawLimit',\n      msg: 'Tried to withdraw over the specified limit',\n    },\n    {\n      code: 113,\n      name: 'WhitelistEntryNotFound',\n      msg: 'Whitelist entry not found.',\n    },\n    {\n      code: 114,\n      name: 'Unauthorized',\n      msg: 'You do not have sufficient permissions to perform this action.',\n    },\n    {\n      code: 115,\n      name: 'UnableToWithdrawWhileStaked',\n      msg: 'You are unable to realize projected rewards until unstaking.',\n    },\n    {\n      code: 116,\n      name: 'InvalidLockRealizor',\n      msg: \"The given lock realizor doesn't match the vesting account.\",\n    },\n    {\n      code: 117,\n      name: 'UnrealizedVesting',\n      msg: 'You have not realized this vesting account.',\n    },\n    {\n      code: 118,\n      name: 'InvalidSchedule',\n      msg: 'Invalid vesting schedule given.',\n    },\n  ],\n};\n\nexport default idl;\n"]},"metadata":{},"sourceType":"module"}