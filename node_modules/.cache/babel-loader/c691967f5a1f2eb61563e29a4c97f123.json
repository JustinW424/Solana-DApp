{"ast":null,"code":"var _jsxFileName = \"F:\\\\jobs\\\\stake_in_solana\\\\source\\\\src\\\\components\\\\lockups\\\\Vestings.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport Container from '@material-ui/core/Container';\nimport List from '@material-ui/core/List';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport NewVestingButton from './NewVesting';\nimport VestingAccountCard from './VestingAccountCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Vestings() {\n  _s();\n\n  const {\n    wallet\n  } = useWallet();\n  const {\n    vestingAccounts,\n    network\n  } = useSelector(state => {\n    return {\n      vestingAccounts: state.lockup.vestings.map(v => {\n        return {\n          publicKey: v,\n          account: state.accounts[v.toString()]\n        };\n      }),\n      network: state.common.network\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fixed: true,\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '24px',\n          marginBottom: '24px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"stylesheet\",\n          href: \"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.css\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n          src: \"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), wallet.publicKey && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            marginBottom: '24px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              flexDirection: 'column'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              style: {\n                fontSize: '20px',\n                fontWeight: 'bold'\n              },\n              children: \"Projected Unlocks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(NewVestingButton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          children: [\"In addition to a vesting schedule, locked token accounts are subject to an application dependent\", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \" realization condition\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), \", determining if and when locked tokens are given to a user. For example, in the case of locked staking rewards, locked tokens become realized in the event of unstaking. If one never unstakes, one never receives locked token rewards.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          style: {\n            marginLeft: 'auto',\n            marginRight: 'auto'\n          },\n          children: [vestingAccounts.map(v => /*#__PURE__*/_jsxDEV(VestingAccountCard, {\n            network: network,\n            vesting: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)), vestingAccounts.length === 0 && /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              marginTop: '24px'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: '100%',\n                    display: 'flex',\n                    justifyContent: 'space-between'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textSecondary\",\n                    variant: \"h6\",\n                    children: \"No vesting accounts found\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Vestings, \"gPb6E6BRlQVHgeuf+/SVzS4APSI=\", false, function () {\n  return [useWallet, useSelector];\n});\n\n_c = Vestings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Vestings\");","map":{"version":3,"sources":["F:/jobs/stake_in_solana/source/src/components/lockups/Vestings.tsx"],"names":["React","useSelector","Card","CardContent","Typography","ListItem","Container","List","useWallet","NewVestingButton","VestingAccountCard","Vestings","wallet","vestingAccounts","network","state","lockup","vestings","map","v","publicKey","account","accounts","toString","common","width","marginTop","marginBottom","display","justifyContent","flexDirection","fontSize","fontWeight","marginLeft","marginRight","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport Container from '@material-ui/core/Container';\nimport List from '@material-ui/core/List';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { State as StoreState } from '../../store/reducer';\nimport NewVestingButton from './NewVesting';\nimport VestingAccountCard from './VestingAccountCard';\n\nexport default function Vestings() {\n  const { wallet } = useWallet();\n  const { vestingAccounts, network } = useSelector((state: StoreState) => {\n    return {\n      vestingAccounts: state.lockup.vestings.map(v => {\n        return {\n          publicKey: v,\n          account: state.accounts[v.toString()],\n        };\n      }),\n      network: state.common.network,\n    };\n  });\n\n  return (\n    <Container fixed maxWidth=\"md\">\n      <div style={{ width: '100%' }}>\n        <div style={{ marginTop: '24px', marginBottom: '24px' }}>\n          <link\n            rel=\"stylesheet\"\n            href=\"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.css\"\n          />\n          <script src=\"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.js\"></script>\n          {wallet.publicKey && (\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginBottom: '24px',\n              }}\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  flexDirection: 'column',\n                }}\n              >\n                <Typography\n                  style={{\n                    fontSize: '20px',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  Projected Unlocks\n                </Typography>\n              </div>\n              <div>\n                <NewVestingButton />\n              </div>\n            </div>\n          )}\n          <Typography color=\"textSecondary\">\n            In addition to a vesting schedule, locked token accounts are subject\n            to an application dependent\n            <b> realization condition</b>, determining if and when locked tokens\n            are given to a user. For example, in the case of locked staking\n            rewards, locked tokens become realized in the event of unstaking. If\n            one never unstakes, one never receives locked token rewards.\n          </Typography>\n          <List\n            disablePadding\n            style={{ marginLeft: 'auto', marginRight: 'auto' }}\n          >\n            {vestingAccounts.map(v => (\n              <VestingAccountCard network={network} vesting={v} />\n            ))}\n            {vestingAccounts.length === 0 && (\n              <Card\n                style={{\n                  marginTop: '24px',\n                }}\n              >\n                <CardContent>\n                  <ListItem>\n                    <div\n                      style={{\n                        width: '100%',\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                      }}\n                    >\n                      <Typography color=\"textSecondary\" variant=\"h6\">\n                        No vesting accounts found\n                      </Typography>\n                    </div>\n                  </ListItem>\n                </CardContent>\n              </Card>\n            )}\n          </List>\n        </div>\n      </div>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}