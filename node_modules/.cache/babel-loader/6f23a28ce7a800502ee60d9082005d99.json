{"ast":null,"code":"var _jsxFileName = \"F:\\\\jobs\\\\stake_in_solana\\\\source\\\\src\\\\components\\\\rewards\\\\DropRewardButton.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport { useSnackbar } from 'notistack';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport * as serumCmn from '@project-serum/common';\nimport { TokenInstructions } from '@project-serum/serum';\nimport { Account, PublicKey, SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY } from '@solana/web3.js';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport OwnedTokenAccountsSelect from '../common/OwnedTokenAccountsSelect';\nimport * as notification from '../common/Notification';\nimport { fromDisplay } from '../../utils/tokens';\nimport { activeRegistrar } from '../common/RegistrarSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DropRewardButton() {\n  _s();\n\n  const [showDialog, setShowDialog] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setShowDialog(true),\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Drop Rewards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropRewardDialog, {\n      open: showDialog,\n      onClose: () => setShowDialog(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DropRewardButton, \"C5PISlkcQlOsRRZI6hhjnbbUJLI=\");\n\n_c = DropRewardButton;\nvar RewardTypeViewModel;\n\n(function (RewardTypeViewModel) {\n  RewardTypeViewModel[RewardTypeViewModel[\"Unlocked\"] = 0] = \"Unlocked\";\n  RewardTypeViewModel[RewardTypeViewModel[\"Locked\"] = 1] = \"Locked\";\n})(RewardTypeViewModel || (RewardTypeViewModel = {}));\n\nfunction DropRewardDialog(props) {\n  _s2();\n\n  const {\n    open,\n    onClose\n  } = props;\n  const {\n    selectedRegistrar\n  } = useSelector(state => {\n    return {\n      selectedRegistrar: activeRegistrar(state)\n    };\n  });\n  const [rewardTypeTab, setRewardTypeTab] = useState(RewardTypeViewModel.Unlocked);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    fullWidth: true,\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h2\",\n          children: `Drop Rewards on ${selectedRegistrar.label.toUpperCase()} Stakers`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: rewardTypeTab,\n        onChange: (_e, t) => setRewardTypeTab(t),\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          value: RewardTypeViewModel.Unlocked,\n          label: \"Unlocked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          value: RewardTypeViewModel.Locked,\n          label: \"Locked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), rewardTypeTab === RewardTypeViewModel.Unlocked && /*#__PURE__*/_jsxDEV(DropUnlockedForm, {\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), rewardTypeTab === RewardTypeViewModel.Locked && /*#__PURE__*/_jsxDEV(DropLockedForm, {\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(DropRewardDialog, \"vzuV7nRMnS8M6yMkiRdc4nc03pk=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = DropRewardDialog;\n\nfunction DropUnlockedForm(props) {\n  _s3();\n\n  const {\n    onClose\n  } = props;\n  const snack = useSnackbar();\n  const {\n    registryClient\n  } = useWallet();\n  const {\n    network,\n    registrar,\n    accounts\n  } = useSelector(state => {\n    return {\n      network: state.common.network,\n      registrar: {\n        publicKey: state.registry.registrar,\n        account: state.accounts[state.registry.registrar.toString()]\n      },\n      accounts: state.accounts\n    };\n  });\n  const [rewardDisplayAmount, setRewardDisplayAmount] = useState(null);\n  const [expiryTs, setExpiryTs] = useState(null);\n  const [depositor, setDepositor] = useState(null);\n  const [mint, setMint] = useState(null);\n  const isSendEnabled = mint !== null && depositor !== null && rewardDisplayAmount !== null && rewardDisplayAmount >= 100 && expiryTs !== null;\n\n  const sendUnlockedReward = async () => {\n    await notification.withTx(snack, 'Dropping unlocked reward...', 'Unlocked reward dropped', async () => {\n      let mintAccount = accounts[network.mints[mint].toString()];\n\n      if (!mintAccount) {\n        mintAccount = await serumCmn.getMintInfo(registryClient.provider, network.mints[mint]);\n      }\n\n      const lockedRewardAmount = fromDisplay(rewardDisplayAmount, mintAccount.decimals);\n      const rewardKind = {\n        unlocked: {}\n      };\n      const vendor = new Account();\n      const vendorVault = new Account();\n      const [vendorSigner, nonce] = await PublicKey.findProgramAddress([registrar.publicKey.toBuffer(), vendor.publicKey.toBuffer()], registryClient.programId);\n      return await registryClient.rpc.dropReward(rewardKind, lockedRewardAmount, new BN(expiryTs), registryClient.provider.wallet.publicKey, nonce, {\n        accounts: {\n          registrar: registrar.publicKey,\n          rewardEventQ: registrar.account.rewardEventQ,\n          poolMint: registrar.account.poolMint,\n          vendor: vendor.publicKey,\n          vendorVault: vendorVault.publicKey,\n          depositor,\n          depositorAuthority: registryClient.provider.wallet.publicKey,\n          tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n          clock: SYSVAR_CLOCK_PUBKEY,\n          rent: SYSVAR_RENT_PUBKEY\n        },\n        signers: [vendorVault, vendor],\n        instructions: [...(await serumCmn.createTokenAccountInstrs(registryClient.provider, vendorVault.publicKey, network.mints[mint], vendorSigner)), await registryClient.account.rewardVendor.createInstruction(vendor)]\n      });\n    });\n    onClose();\n  };\n\n  const onClick = () => {\n    sendUnlockedReward().catch(err => {\n      console.error(err);\n      snack.enqueueSnackbar(`Error dropping unlocked reward: ${err.toString()}`, {\n        variant: 'error'\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(DropVendorForm, {\n    network: network,\n    mint: mint,\n    setMint: setMint,\n    setDepositor: setDepositor,\n    setRewardDisplayAmount: setRewardDisplayAmount,\n    expiryTs: expiryTs,\n    setExpiryTs: setExpiryTs,\n    onCancel: onClose,\n    onClick: onClick,\n    isSendEnabled: isSendEnabled\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(DropUnlockedForm, \"DbL5OJMzMFTUN8S0fdRcbTEQN7o=\", false, function () {\n  return [useSnackbar, useWallet, useSelector];\n});\n\n_c3 = DropUnlockedForm;\n\nfunction DropLockedForm(props) {\n  _s4();\n\n  const {\n    onClose\n  } = props;\n  const snack = useSnackbar();\n  const {\n    registryClient\n  } = useWallet();\n  const {\n    network,\n    registrar,\n    accounts\n  } = useSelector(state => {\n    return {\n      network: state.common.network,\n      registrar: {\n        publicKey: state.registry.registrar,\n        account: state.accounts[state.registry.registrar.toString()]\n      },\n      accounts: state.accounts\n    };\n  });\n  const [rewardDisplayAmount, setRewardDisplayAmount] = useState(null);\n  const [startTs, setStartTs] = useState(null);\n  const [endTs, setEndTs] = useState(null);\n  const [expiryTs, setExpiryTs] = useState(null);\n  const [depositor, setDepositor] = useState(null);\n  const [mint, setMint] = useState(null);\n  const [periodCount, setPeriodCount] = useState(7);\n  const isSendEnabled = startTs !== null && endTs !== null && mint !== null && depositor !== null && rewardDisplayAmount !== null && rewardDisplayAmount >= 100 && expiryTs !== null;\n\n  const sendLockedRewards = async () => {\n    await notification.withTx(snack, 'Dropping locked reward...', 'Locked reward dropped', async () => {\n      const rewardKind = {\n        locked: {\n          startTs: new BN(startTs),\n          endTs: new BN(endTs),\n          periodCount: new BN(periodCount)\n        }\n      };\n      const vendor = new Account();\n      const vendorVault = new Account();\n      const [vendorSigner, nonce] = await PublicKey.findProgramAddress([registrar.publicKey.toBuffer(), vendor.publicKey.toBuffer()], registryClient.programId);\n      let mintAccount = accounts[network.mints[mint].toString()];\n      const rewardAmount = fromDisplay(rewardDisplayAmount, mintAccount.decimals);\n      return await registryClient.rpc.dropReward(rewardKind, rewardAmount, new BN(expiryTs), registryClient.provider.wallet.publicKey, nonce, {\n        accounts: {\n          registrar: registrar.publicKey,\n          rewardEventQ: registrar.account.rewardEventQ,\n          poolMint: registrar.account.poolMint,\n          vendor: vendor.publicKey,\n          vendorVault: vendorVault.publicKey,\n          depositor,\n          depositorAuthority: registryClient.provider.wallet.publicKey,\n          tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n          clock: SYSVAR_CLOCK_PUBKEY,\n          rent: SYSVAR_RENT_PUBKEY\n        },\n        signers: [vendorVault, vendor],\n        instructions: [...(await serumCmn.createTokenAccountInstrs(registryClient.provider, vendorVault.publicKey, network.mints[mint], vendorSigner)), await registryClient.account.rewardVendor.createInstruction(vendor)]\n      });\n    });\n    onClose();\n  };\n\n  const onClick = () => {\n    sendLockedRewards().catch(err => {\n      snack.enqueueSnackbar(`Error dropping locked reward: ${err.toString()}`, {\n        variant: 'error'\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(DropVendorForm, {\n    network: network,\n    mint: mint,\n    setMint: setMint,\n    setDepositor: setDepositor,\n    setRewardDisplayAmount: setRewardDisplayAmount,\n    setStartTs: setStartTs,\n    setEndTs: setEndTs,\n    periodCount: periodCount,\n    setPeriodCount: setPeriodCount,\n    expiryTs: expiryTs,\n    setExpiryTs: setExpiryTs,\n    onCancel: onClose,\n    onClick: onClick,\n    isSendEnabled: isSendEnabled\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(DropLockedForm, \"3Vo/I+j3/ecGauqcgIqTIhPbF/o=\", false, function () {\n  return [useSnackbar, useWallet, useSelector];\n});\n\n_c4 = DropLockedForm;\n\nfunction DropVendorForm(props) {\n  const {\n    network,\n    mint,\n    setDepositor,\n    setMint,\n    setRewardDisplayAmount,\n    setStartTs,\n    setEndTs,\n    periodCount,\n    setPeriodCount,\n    expiryTs,\n    setExpiryTs,\n    onCancel,\n    onClick,\n    isSendEnabled\n  } = props;\n  const mintOptions = Object.keys(network.mints).map(label => {\n    return {\n      label,\n      publicKey: network.mints[label]\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(OwnedTokenAccountsSelect, {\n            style: {\n              height: '100%'\n            },\n            mint: mint === null ? undefined : network.mints[mint],\n            onChange: f => setDepositor(f)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Account to send from\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            style: {\n              width: '200px',\n              marginLeft: '10px',\n              marginTop: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Mint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: mint,\n              onChange: e => setMint(e.target.value),\n              label: \"Mint\",\n              children: mintOptions.map(m => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: m.label,\n                children: m.label.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              marginLeft: '10px',\n              marginTop: '10px'\n            },\n            id: \"outlined-number\",\n            label: \"Amount\",\n            type: \"number\",\n            InputLabelProps: {\n              shrink: true\n            },\n            variant: \"outlined\",\n            onChange: e => setRewardDisplayAmount(parseFloat(e.target.value)),\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), setEndTs !== undefined && setStartTs !== undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            marginTop: '37px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Start date\",\n              type: \"datetime-local\",\n              InputLabelProps: {\n                shrink: true\n              },\n              onChange: e => {\n                const d = new Date(e.target.value);\n                setStartTs(d.getTime() / 1000);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n              children: \"Date vesting begins\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"End date\",\n            type: \"datetime-local\",\n            InputLabelProps: {\n              shrink: true\n            },\n            onChange: e => {\n              const d = new Date(e.target.value);\n              setEndTs(d.getTime() / 1000);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Date the vesting account is fully vested\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              style: {\n                marginTop: '37px'\n              },\n              id: \"outlined-number\",\n              label: \"Period Count\",\n              type: \"number\",\n              InputLabelProps: {\n                shrink: true\n              },\n              variant: \"outlined\",\n              value: periodCount,\n              onChange: e => setPeriodCount(parseInt(e.target.value)),\n              InputProps: {\n                inputProps: {\n                  min: 1\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '37px',\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            height: '100%',\n            marginRight: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Expiry date\",\n            type: \"datetime-local\",\n            InputLabelProps: {\n              shrink: true\n            },\n            onChange: e => {\n              const d = new Date(e.target.value);\n              setExpiryTs(d.getTime() / 1000);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Date after which the account owner dropping rewards can withdraw all unclaimed rewards.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '26px'\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            style: {\n              height: '100%'\n            },\n            disabled: true,\n            placeholder: \"Expiry Unix timestamp\",\n            fullWidth: true,\n            value: expiryTs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClick,\n        type: \"submit\",\n        color: \"primary\",\n        disabled: !isSendEnabled,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c5 = DropVendorForm;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"DropRewardButton\");\n$RefreshReg$(_c2, \"DropRewardDialog\");\n$RefreshReg$(_c3, \"DropUnlockedForm\");\n$RefreshReg$(_c4, \"DropLockedForm\");\n$RefreshReg$(_c5, \"DropVendorForm\");","map":{"version":3,"sources":["F:/jobs/stake_in_solana/source/src/components/rewards/DropRewardButton.tsx"],"names":["React","useState","useSelector","BN","useSnackbar","Dialog","DialogActions","DialogContent","DialogTitle","Button","Tabs","MenuItem","Tab","Typography","TextField","FormHelperText","FormControl","InputLabel","Select","serumCmn","TokenInstructions","Account","PublicKey","SYSVAR_CLOCK_PUBKEY","SYSVAR_RENT_PUBKEY","useWallet","OwnedTokenAccountsSelect","notification","fromDisplay","activeRegistrar","DropRewardButton","showDialog","setShowDialog","RewardTypeViewModel","DropRewardDialog","props","open","onClose","selectedRegistrar","state","rewardTypeTab","setRewardTypeTab","Unlocked","display","justifyContent","label","toUpperCase","_e","t","Locked","DropUnlockedForm","snack","registryClient","network","registrar","accounts","common","publicKey","registry","account","toString","rewardDisplayAmount","setRewardDisplayAmount","expiryTs","setExpiryTs","depositor","setDepositor","mint","setMint","isSendEnabled","sendUnlockedReward","withTx","mintAccount","mints","getMintInfo","provider","lockedRewardAmount","decimals","rewardKind","unlocked","vendor","vendorVault","vendorSigner","nonce","findProgramAddress","toBuffer","programId","rpc","dropReward","wallet","rewardEventQ","poolMint","depositorAuthority","tokenProgram","TOKEN_PROGRAM_ID","clock","rent","signers","instructions","createTokenAccountInstrs","rewardVendor","createInstruction","onClick","catch","err","console","error","enqueueSnackbar","variant","DropLockedForm","startTs","setStartTs","endTs","setEndTs","periodCount","setPeriodCount","sendLockedRewards","locked","rewardAmount","DropVendorForm","onCancel","mintOptions","Object","keys","map","marginTop","flex","height","undefined","f","width","marginLeft","e","target","value","m","shrink","parseFloat","inputProps","min","d","Date","getTime","parseInt","marginRight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport { useSnackbar } from 'notistack';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport * as serumCmn from '@project-serum/common';\nimport { TokenInstructions } from '@project-serum/serum';\nimport {\n  Account,\n  PublicKey,\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n} from '@solana/web3.js';\nimport { useWallet } from '../../components/common/WalletProvider';\nimport { State as StoreState } from '../../store/reducer';\nimport OwnedTokenAccountsSelect from '../common/OwnedTokenAccountsSelect';\nimport * as notification from '../common/Notification';\nimport { fromDisplay } from '../../utils/tokens';\nimport { Network } from '../../store/config';\nimport { activeRegistrar } from '../common/RegistrarSelect';\n\nexport default function DropRewardButton() {\n  const [showDialog, setShowDialog] = useState(false);\n  return (\n    <>\n      <div onClick={() => setShowDialog(true)}>\n        <Button variant=\"contained\" color=\"secondary\">\n          Drop Rewards\n        </Button>\n      </div>\n      <DropRewardDialog\n        open={showDialog}\n        onClose={() => setShowDialog(false)}\n      />\n    </>\n  );\n}\n\nenum RewardTypeViewModel {\n  Unlocked,\n  Locked,\n}\n\ntype DropRewardsDialogProps = {\n  open: boolean;\n  onClose: () => void;\n};\n\nfunction DropRewardDialog(props: DropRewardsDialogProps) {\n  const { open, onClose } = props;\n  const { selectedRegistrar } = useSelector((state: StoreState) => {\n    return {\n      selectedRegistrar: activeRegistrar(state),\n    };\n  });\n  const [rewardTypeTab, setRewardTypeTab] = useState(\n    RewardTypeViewModel.Unlocked,\n  );\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"md\">\n      <DialogTitle>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Typography variant=\"h4\" component=\"h2\">\n            {`Drop Rewards on ${selectedRegistrar.label.toUpperCase()} Stakers`}\n          </Typography>\n        </div>\n      </DialogTitle>\n      <DialogContent>\n        <Tabs value={rewardTypeTab} onChange={(_e, t) => setRewardTypeTab(t)}>\n          <Tab value={RewardTypeViewModel.Unlocked} label=\"Unlocked\" />\n          <Tab value={RewardTypeViewModel.Locked} label=\"Locked\" />\n        </Tabs>\n        {rewardTypeTab === RewardTypeViewModel.Unlocked && (\n          <DropUnlockedForm onClose={onClose} />\n        )}\n        {rewardTypeTab === RewardTypeViewModel.Locked && (\n          <DropLockedForm onClose={onClose} />\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\ntype DropUnlockedFormProps = {\n  onClose: () => void;\n};\n\nfunction DropUnlockedForm(props: DropUnlockedFormProps) {\n  const { onClose } = props;\n  const snack = useSnackbar();\n  const { registryClient } = useWallet();\n  const { network, registrar, accounts } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      registrar: {\n        publicKey: state.registry.registrar,\n        account: state.accounts[state.registry.registrar.toString()],\n      },\n      accounts: state.accounts,\n    };\n  });\n\n  const [rewardDisplayAmount, setRewardDisplayAmount] = useState<null | number>(\n    null,\n  );\n  const [expiryTs, setExpiryTs] = useState<null | number>(null);\n  const [depositor, setDepositor] = useState<null | PublicKey>(null);\n  const [mint, setMint] = useState<null | string>(null);\n\n  const isSendEnabled =\n    mint !== null &&\n    depositor !== null &&\n    rewardDisplayAmount !== null &&\n    rewardDisplayAmount >= 100 &&\n    expiryTs !== null;\n\n  const sendUnlockedReward = async () => {\n    await notification.withTx(\n      snack,\n      'Dropping unlocked reward...',\n      'Unlocked reward dropped',\n      async () => {\n        let mintAccount = accounts[network.mints[mint!].toString()];\n        if (!mintAccount) {\n          mintAccount = await serumCmn.getMintInfo(\n            registryClient.provider,\n            network.mints[mint!],\n          );\n        }\n\n        const lockedRewardAmount = fromDisplay(\n          rewardDisplayAmount!,\n          mintAccount.decimals,\n        );\n        const rewardKind = { unlocked: {} };\n        const vendor = new Account();\n        const vendorVault = new Account();\n        const [vendorSigner, nonce] = await PublicKey.findProgramAddress(\n          [registrar.publicKey.toBuffer(), vendor.publicKey.toBuffer()],\n          registryClient.programId,\n        );\n        return await registryClient.rpc.dropReward(\n          rewardKind,\n          lockedRewardAmount,\n          new BN(expiryTs!),\n          registryClient.provider.wallet.publicKey,\n          nonce,\n          {\n            accounts: {\n              registrar: registrar.publicKey,\n              rewardEventQ: registrar.account.rewardEventQ,\n              poolMint: registrar.account.poolMint,\n              vendor: vendor.publicKey,\n              vendorVault: vendorVault.publicKey,\n              depositor,\n              depositorAuthority: registryClient.provider.wallet.publicKey,\n              tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n              clock: SYSVAR_CLOCK_PUBKEY,\n              rent: SYSVAR_RENT_PUBKEY,\n            },\n            signers: [vendorVault, vendor],\n            instructions: [\n              ...(await serumCmn.createTokenAccountInstrs(\n                registryClient.provider,\n                vendorVault.publicKey,\n                network.mints[mint!],\n                vendorSigner,\n              )),\n              await registryClient.account.rewardVendor.createInstruction(\n                vendor,\n              ),\n            ],\n          },\n        );\n      },\n    );\n    onClose();\n  };\n  const onClick = () => {\n    sendUnlockedReward().catch(err => {\n      console.error(err);\n      snack.enqueueSnackbar(\n        `Error dropping unlocked reward: ${err.toString()}`,\n        {\n          variant: 'error',\n        },\n      );\n    });\n  };\n  return (\n    <DropVendorForm\n      network={network}\n      mint={mint}\n      setMint={setMint}\n      setDepositor={setDepositor}\n      setRewardDisplayAmount={setRewardDisplayAmount}\n      expiryTs={expiryTs}\n      setExpiryTs={setExpiryTs}\n      onCancel={onClose}\n      onClick={onClick}\n      isSendEnabled={isSendEnabled}\n    />\n  );\n}\n\ntype DropLockedFormProps = DropUnlockedFormProps;\n\nfunction DropLockedForm(props: DropLockedFormProps) {\n  const { onClose } = props;\n  const snack = useSnackbar();\n  const { registryClient } = useWallet();\n  const { network, registrar, accounts } = useSelector((state: StoreState) => {\n    return {\n      network: state.common.network,\n      registrar: {\n        publicKey: state.registry.registrar,\n        account: state.accounts[state.registry.registrar.toString()],\n      },\n      accounts: state.accounts,\n    };\n  });\n\n  const [rewardDisplayAmount, setRewardDisplayAmount] = useState<null | number>(\n    null,\n  );\n  const [startTs, setStartTs] = useState<null | number>(null);\n  const [endTs, setEndTs] = useState<null | number>(null);\n  const [expiryTs, setExpiryTs] = useState<null | number>(null);\n  const [depositor, setDepositor] = useState<null | PublicKey>(null);\n  const [mint, setMint] = useState<null | string>(null);\n  const [periodCount, setPeriodCount] = useState(7);\n\n  const isSendEnabled =\n    startTs !== null &&\n    endTs !== null &&\n    mint !== null &&\n    depositor !== null &&\n    rewardDisplayAmount !== null &&\n    rewardDisplayAmount >= 100 &&\n    expiryTs !== null;\n\n  const sendLockedRewards = async () => {\n    await notification.withTx(\n      snack,\n      'Dropping locked reward...',\n      'Locked reward dropped',\n      async () => {\n        const rewardKind = {\n          locked: {\n            startTs: new BN(startTs!),\n            endTs: new BN(endTs!),\n            periodCount: new BN(periodCount),\n          },\n        };\n        const vendor = new Account();\n        const vendorVault = new Account();\n        const [vendorSigner, nonce] = await PublicKey.findProgramAddress(\n          [registrar.publicKey.toBuffer(), vendor.publicKey.toBuffer()],\n          registryClient.programId,\n        );\n        let mintAccount = accounts[network.mints[mint!].toString()];\n        const rewardAmount = fromDisplay(\n          rewardDisplayAmount!,\n          mintAccount.decimals,\n        );\n        return await registryClient.rpc.dropReward(\n          rewardKind,\n          rewardAmount,\n          new BN(expiryTs!),\n          registryClient.provider.wallet.publicKey,\n          nonce,\n          {\n            accounts: {\n              registrar: registrar.publicKey,\n              rewardEventQ: registrar.account.rewardEventQ,\n              poolMint: registrar.account.poolMint,\n              vendor: vendor.publicKey,\n              vendorVault: vendorVault.publicKey,\n              depositor,\n              depositorAuthority: registryClient.provider.wallet.publicKey,\n              tokenProgram: TokenInstructions.TOKEN_PROGRAM_ID,\n              clock: SYSVAR_CLOCK_PUBKEY,\n              rent: SYSVAR_RENT_PUBKEY,\n            },\n            signers: [vendorVault, vendor],\n            instructions: [\n              ...(await serumCmn.createTokenAccountInstrs(\n                registryClient.provider,\n                vendorVault.publicKey,\n                network.mints[mint!],\n                vendorSigner,\n              )),\n              await registryClient.account.rewardVendor.createInstruction(\n                vendor,\n              ),\n            ],\n          },\n        );\n      },\n    );\n    onClose();\n  };\n\n  const onClick = () => {\n    sendLockedRewards().catch(err => {\n      snack.enqueueSnackbar(`Error dropping locked reward: ${err.toString()}`, {\n        variant: 'error',\n      });\n    });\n  };\n\n  return (\n    <DropVendorForm\n      network={network}\n      mint={mint}\n      setMint={setMint}\n      setDepositor={setDepositor}\n      setRewardDisplayAmount={setRewardDisplayAmount}\n      setStartTs={setStartTs}\n      setEndTs={setEndTs}\n      periodCount={periodCount}\n      setPeriodCount={setPeriodCount}\n      expiryTs={expiryTs}\n      setExpiryTs={setExpiryTs}\n      onCancel={onClose}\n      onClick={onClick}\n      isSendEnabled={isSendEnabled}\n    />\n  );\n}\n\ntype DropVendorFormProps = {\n  network: Network;\n  mint: string | null;\n  setMint: (mintLabel: string) => void;\n  setDepositor: (pk: PublicKey) => void;\n  setRewardDisplayAmount: (n: number) => void;\n  setStartTs?: (n: number) => void;\n  setEndTs?: (n: number) => void;\n  periodCount?: number;\n  setPeriodCount?: (p: number) => void;\n  expiryTs: number | null;\n  setExpiryTs: (ts: number) => void;\n  onCancel: () => void;\n  onClick: () => void;\n  isSendEnabled: boolean;\n};\n\nfunction DropVendorForm(props: DropVendorFormProps) {\n  const {\n    network,\n    mint,\n    setDepositor,\n    setMint,\n    setRewardDisplayAmount,\n    setStartTs,\n    setEndTs,\n    periodCount,\n    setPeriodCount,\n    expiryTs,\n    setExpiryTs,\n    onCancel,\n    onClick,\n    isSendEnabled,\n  } = props;\n  const mintOptions: { label: string; publicKey: PublicKey }[] = Object.keys(\n    network.mints,\n  ).map(label => {\n    return {\n      label,\n      publicKey: network.mints[label],\n    };\n  });\n\n  return (\n    <>\n      <div>\n        <div style={{ display: 'flex', marginTop: '10px' }}>\n          <div style={{ flex: 1 }}>\n            <OwnedTokenAccountsSelect\n              style={{ height: '100%' }}\n              mint={mint === null ? undefined : network.mints[mint]}\n              onChange={(f: PublicKey) => setDepositor(f)}\n            />\n            <FormHelperText>Account to send from</FormHelperText>\n          </div>\n          <div>\n            <FormControl\n              variant=\"outlined\"\n              style={{ width: '200px', marginLeft: '10px', marginTop: '10px' }}\n            >\n              <InputLabel>Mint</InputLabel>\n              <Select\n                value={mint}\n                onChange={e => setMint(e.target.value as string)}\n                label=\"Mint\"\n              >\n                {mintOptions.map(m => (\n                  <MenuItem value={m.label}>{m.label.toUpperCase()}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n          <div>\n            <TextField\n              style={{ marginLeft: '10px', marginTop: '10px' }}\n              id=\"outlined-number\"\n              label=\"Amount\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              onChange={e =>\n                setRewardDisplayAmount(parseFloat(e.target.value) as number)\n              }\n              InputProps={{ inputProps: { min: 0 } }}\n            />\n          </div>\n        </div>\n        {setEndTs !== undefined && setStartTs !== undefined && (\n          <>\n            <div style={{ display: 'flex', marginTop: '37px' }}>\n              <div style={{ flex: 1 }}>\n                <TextField\n                  fullWidth\n                  label=\"Start date\"\n                  type=\"datetime-local\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  onChange={e => {\n                    const d = new Date(e.target.value);\n                    setStartTs(d.getTime() / 1000);\n                  }}\n                />\n                <FormHelperText>Date vesting begins</FormHelperText>\n              </div>\n            </div>\n            <div style={{ flex: 1, marginTop: '20px' }}>\n              <TextField\n                fullWidth\n                label=\"End date\"\n                type=\"datetime-local\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={e => {\n                  const d = new Date(e.target.value);\n                  setEndTs(d.getTime() / 1000);\n                }}\n              />\n              <FormHelperText>\n                Date the vesting account is fully vested\n              </FormHelperText>\n            </div>\n            <div>\n              <FormControl fullWidth>\n                <TextField\n                  style={{ marginTop: '37px' }}\n                  id=\"outlined-number\"\n                  label=\"Period Count\"\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  variant=\"outlined\"\n                  value={periodCount}\n                  onChange={e =>\n                    setPeriodCount!(parseInt(e.target.value) as number)\n                  }\n                  InputProps={{ inputProps: { min: 1 } }}\n                />\n              </FormControl>\n            </div>\n          </>\n        )}\n        <div style={{ marginTop: '37px', display: 'flex' }}>\n          <div\n            style={{\n              flex: 1,\n              height: '100%',\n              marginRight: '10px',\n            }}\n          >\n            <TextField\n              fullWidth\n              label=\"Expiry date\"\n              type=\"datetime-local\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={e => {\n                const d = new Date(e.target.value);\n                setExpiryTs(d.getTime() / 1000);\n              }}\n            />\n            <FormHelperText>\n              Date after which the account owner dropping rewards can withdraw\n              all unclaimed rewards.\n            </FormHelperText>\n          </div>\n          <div style={{ marginTop: '26px' }}>\n            <TextField\n              style={{ height: '100%' }}\n              disabled\n              placeholder=\"Expiry Unix timestamp\"\n              fullWidth\n              value={expiryTs}\n            />\n          </div>\n        </div>\n      </div>\n      <DialogActions>\n        <Button onClick={onCancel}>Cancel</Button>\n        <Button\n          onClick={onClick}\n          type=\"submit\"\n          color=\"primary\"\n          disabled={!isSendEnabled}\n        >\n          Send\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}