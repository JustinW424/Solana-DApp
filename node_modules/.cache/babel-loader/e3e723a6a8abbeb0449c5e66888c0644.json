{"ast":null,"code":"var _jsxFileName = \"F:\\\\jobs\\\\stake_in_solana\\\\source\\\\src\\\\components\\\\common\\\\Notification.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function withTx(snack, beforeLabel, afterLabel, execTx) {\n  snack.enqueueSnackbar(beforeLabel, {\n    variant: 'info'\n  });\n\n  try {\n    let tx = await execTx();\n    snack.closeSnackbar();\n    snack.enqueueSnackbar(afterLabel, {\n      variant: 'success',\n      action: /*#__PURE__*/_jsxDEV(ViewTransactionOnExplorerButton, {\n        signature: tx\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this)\n    });\n  } catch (err) {\n    snack.enqueueSnackbar(`Error: ${err.toString()}`, {\n      variant: 'error'\n    });\n  }\n}\nexport function ViewTransactionOnExplorerButton(props) {\n  _s();\n\n  const {\n    signature\n  } = props;\n  const {\n    explorerClusterSuffix\n  } = useSelector(state => {\n    return {\n      explorerClusterSuffix: state.common.network.explorerClusterSuffix\n    };\n  });\n  const urlSuffix = `?cluster=${explorerClusterSuffix}`;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    color: \"inherit\",\n    component: \"a\",\n    target: \"_blank\",\n    rel: \"noopener\",\n    href: `https://explorer.solana.com/tx/${signature}` + urlSuffix,\n    children: \"View on Solana Explorer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewTransactionOnExplorerButton, \"5kIA6gM9tsbApkHCVVDFVfJDj1U=\", false, function () {\n  return [useSelector];\n});\n\n_c = ViewTransactionOnExplorerButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewTransactionOnExplorerButton\");","map":{"version":3,"sources":["F:/jobs/stake_in_solana/source/src/components/common/Notification.tsx"],"names":["React","useSelector","Button","withTx","snack","beforeLabel","afterLabel","execTx","enqueueSnackbar","variant","tx","closeSnackbar","action","err","toString","ViewTransactionOnExplorerButton","props","signature","explorerClusterSuffix","state","common","network","urlSuffix"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAQA,OAAO,eAAeC,MAAf,CACLC,KADK,EAELC,WAFK,EAGLC,UAHK,EAILC,MAJK,EAKL;AACAH,EAAAA,KAAK,CAACI,eAAN,CAAsBH,WAAtB,EAAmC;AACjCI,IAAAA,OAAO,EAAE;AADwB,GAAnC;;AAGA,MAAI;AACF,QAAIC,EAAE,GAAG,MAAMH,MAAM,EAArB;AACAH,IAAAA,KAAK,CAACO,aAAN;AACAP,IAAAA,KAAK,CAACI,eAAN,CAAsBF,UAAtB,EAAkC;AAChCG,MAAAA,OAAO,EAAE,SADuB;AAEhCG,MAAAA,MAAM,eAAE,QAAC,+BAAD;AAAiC,QAAA,SAAS,EAAEF;AAA5C;AAAA;AAAA;AAAA;AAAA;AAFwB,KAAlC;AAID,GAPD,CAOE,OAAOG,GAAP,EAAY;AACZT,IAAAA,KAAK,CAACI,eAAN,CAAuB,UAASK,GAAG,CAACC,QAAJ,EAAe,EAA/C,EAAkD;AAChDL,MAAAA,OAAO,EAAE;AADuC,KAAlD;AAGD;AACF;AAED,OAAO,SAASM,+BAAT,CAAyCC,KAAzC,EAAuD;AAAA;;AAC5D,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAA4BjB,WAAW,CAAEkB,KAAD,IAAuB;AACnE,WAAO;AACLD,MAAAA,qBAAqB,EAAEC,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqBH;AADvC,KAAP;AAGD,GAJ4C,CAA7C;AAKA,QAAMI,SAAS,GAAI,YAAWJ,qBAAsB,EAApD;AACA,sBACE,QAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,SAAS,EAAC,GAFZ;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,GAAG,EAAC,UAJN;AAKE,IAAA,IAAI,EAAG,kCAAiCD,SAAU,EAA5C,GAAgDK,SALxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAnBeP,+B;UAEoBd,W;;;KAFpBc,+B","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { TransactionSignature } from '@solana/web3.js';\nimport { State as StoreState } from '../../store/reducer';\n\ntype Props = {\n  signature: string;\n};\n\nexport async function withTx(\n  snack: any,\n  beforeLabel: string,\n  afterLabel: string,\n  execTx: () => Promise<TransactionSignature>,\n) {\n  snack.enqueueSnackbar(beforeLabel, {\n    variant: 'info',\n  });\n  try {\n    let tx = await execTx();\n    snack.closeSnackbar();\n    snack.enqueueSnackbar(afterLabel, {\n      variant: 'success',\n      action: <ViewTransactionOnExplorerButton signature={tx} />,\n    });\n  } catch (err) {\n    snack.enqueueSnackbar(`Error: ${err.toString()}`, {\n      variant: 'error',\n    });\n  }\n}\n\nexport function ViewTransactionOnExplorerButton(props: Props) {\n  const { signature } = props;\n  const { explorerClusterSuffix } = useSelector((state: StoreState) => {\n    return {\n      explorerClusterSuffix: state.common.network.explorerClusterSuffix,\n    };\n  });\n  const urlSuffix = `?cluster=${explorerClusterSuffix}`;\n  return (\n    <Button\n      color=\"inherit\"\n      component=\"a\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      href={`https://explorer.solana.com/tx/${signature}` + urlSuffix}\n    >\n      View on Solana Explorer\n    </Button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}