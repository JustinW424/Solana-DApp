{"ast":null,"code":"const idl = {\n  version: '0.0.0',\n  name: 'multisig',\n  instructions: [{\n    name: 'createMultisig',\n    accounts: [{\n      name: 'multisig',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'rent',\n      isMut: false,\n      isSigner: false\n    }],\n    args: [{\n      name: 'owners',\n      type: {\n        vec: 'publicKey'\n      }\n    }, {\n      name: 'threshold',\n      type: 'u64'\n    }, {\n      name: 'nonce',\n      type: 'u8'\n    }]\n  }, {\n    name: 'createTransaction',\n    accounts: [{\n      name: 'multisig',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'transaction',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'proposer',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'rent',\n      isMut: false,\n      isSigner: false\n    }],\n    args: [{\n      name: 'pid',\n      type: 'publicKey'\n    }, {\n      name: 'accs',\n      type: {\n        vec: {\n          defined: 'TransactionAccount'\n        }\n      }\n    }, {\n      name: 'data',\n      type: 'bytes'\n    }]\n  }, {\n    name: 'approve',\n    accounts: [{\n      name: 'multisig',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'transaction',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'owner',\n      isMut: false,\n      isSigner: true\n    }],\n    args: []\n  }, {\n    name: 'setOwners',\n    accounts: [{\n      name: 'multisig',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'multisigSigner',\n      isMut: false,\n      isSigner: true\n    }],\n    args: [{\n      name: 'owners',\n      type: {\n        vec: 'publicKey'\n      }\n    }]\n  }, {\n    name: 'changeThreshold',\n    accounts: [{\n      name: 'multisig',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'multisigSigner',\n      isMut: false,\n      isSigner: true\n    }],\n    args: [{\n      name: 'threshold',\n      type: 'u64'\n    }]\n  }, {\n    name: 'executeTransaction',\n    accounts: [{\n      name: 'multisig',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'multisigSigner',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'transaction',\n      isMut: true,\n      isSigner: false\n    }],\n    args: []\n  }],\n  accounts: [{\n    name: 'Multisig',\n    type: {\n      kind: 'struct',\n      fields: [{\n        name: 'owners',\n        type: {\n          vec: 'publicKey'\n        }\n      }, {\n        name: 'threshold',\n        type: 'u64'\n      }, {\n        name: 'nonce',\n        type: 'u8'\n      }, {\n        name: 'ownerSetSeqno',\n        type: 'u32'\n      }]\n    }\n  }, {\n    name: 'Transaction',\n    type: {\n      kind: 'struct',\n      fields: [{\n        name: 'multisig',\n        type: 'publicKey'\n      }, {\n        name: 'programId',\n        type: 'publicKey'\n      }, {\n        name: 'accounts',\n        type: {\n          vec: {\n            defined: 'TransactionAccount'\n          }\n        }\n      }, {\n        name: 'data',\n        type: 'bytes'\n      }, {\n        name: 'signers',\n        type: {\n          vec: 'bool'\n        }\n      }, {\n        name: 'didExecute',\n        type: 'bool'\n      }, {\n        name: 'ownerSetSeqno',\n        type: 'u32'\n      }]\n    }\n  }],\n  types: [{\n    name: 'TransactionAccount',\n    type: {\n      kind: 'struct',\n      fields: [{\n        name: 'pubkey',\n        type: 'publicKey'\n      }, {\n        name: 'isSigner',\n        type: 'bool'\n      }, {\n        name: 'isWritable',\n        type: 'bool'\n      }]\n    }\n  }],\n  errors: [{\n    code: 100,\n    name: 'InvalidOwner',\n    msg: 'The given owner is not part of this multisig.'\n  }, {\n    code: 101,\n    name: 'NotEnoughSigners',\n    msg: 'Not enough owners signed this transaction.'\n  }, {\n    code: 102,\n    name: 'TransactionAlreadySigned',\n    msg: 'Cannot delete a transaction that has been signed by an owner.'\n  }, {\n    code: 103,\n    name: 'Overflow',\n    msg: 'Overflow when adding.'\n  }, {\n    code: 104,\n    name: 'UnableToDelete',\n    msg: 'Cannot delete a transaction the owner did not create.'\n  }, {\n    code: 105,\n    name: 'AlreadyExecuted',\n    msg: 'The given transaction has already been executed.'\n  }, {\n    code: 106,\n    name: 'InvalidThreshold',\n    msg: 'Threshold must be less than or equal to the number of owners.'\n  }]\n};\nexport default idl;","map":{"version":3,"sources":["F:/jobs/stake_in_solana/source/src/idl/multisig.ts"],"names":["idl","version","name","instructions","accounts","isMut","isSigner","args","type","vec","defined","kind","fields","types","errors","code","msg"],"mappings":"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","sourcesContent":["import { Idl } from '@project-serum/anchor';\n\nconst idl: Idl = {\n  version: '0.0.0',\n  name: 'multisig',\n  instructions: [\n    {\n      name: 'createMultisig',\n      accounts: [\n        {\n          name: 'multisig',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'owners',\n          type: {\n            vec: 'publicKey',\n          },\n        },\n        {\n          name: 'threshold',\n          type: 'u64',\n        },\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'createTransaction',\n      accounts: [\n        {\n          name: 'multisig',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'transaction',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'proposer',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'pid',\n          type: 'publicKey',\n        },\n        {\n          name: 'accs',\n          type: {\n            vec: {\n              defined: 'TransactionAccount',\n            },\n          },\n        },\n        {\n          name: 'data',\n          type: 'bytes',\n        },\n      ],\n    },\n    {\n      name: 'approve',\n      accounts: [\n        {\n          name: 'multisig',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'transaction',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'owner',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'setOwners',\n      accounts: [\n        {\n          name: 'multisig',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'multisigSigner',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'owners',\n          type: {\n            vec: 'publicKey',\n          },\n        },\n      ],\n    },\n    {\n      name: 'changeThreshold',\n      accounts: [\n        {\n          name: 'multisig',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'multisigSigner',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'threshold',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'executeTransaction',\n      accounts: [\n        {\n          name: 'multisig',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'multisigSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'transaction',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n  ],\n  accounts: [\n    {\n      name: 'Multisig',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'owners',\n            type: {\n              vec: 'publicKey',\n            },\n          },\n          {\n            name: 'threshold',\n            type: 'u64',\n          },\n          {\n            name: 'nonce',\n            type: 'u8',\n          },\n          {\n            name: 'ownerSetSeqno',\n            type: 'u32',\n          },\n        ],\n      },\n    },\n    {\n      name: 'Transaction',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'multisig',\n            type: 'publicKey',\n          },\n          {\n            name: 'programId',\n            type: 'publicKey',\n          },\n          {\n            name: 'accounts',\n            type: {\n              vec: {\n                defined: 'TransactionAccount',\n              },\n            },\n          },\n          {\n            name: 'data',\n            type: 'bytes',\n          },\n          {\n            name: 'signers',\n            type: {\n              vec: 'bool',\n            },\n          },\n          {\n            name: 'didExecute',\n            type: 'bool',\n          },\n          {\n            name: 'ownerSetSeqno',\n            type: 'u32',\n          },\n        ],\n      },\n    },\n  ],\n  types: [\n    {\n      name: 'TransactionAccount',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'pubkey',\n            type: 'publicKey',\n          },\n          {\n            name: 'isSigner',\n            type: 'bool',\n          },\n          {\n            name: 'isWritable',\n            type: 'bool',\n          },\n        ],\n      },\n    },\n  ],\n  errors: [\n    {\n      code: 100,\n      name: 'InvalidOwner',\n      msg: 'The given owner is not part of this multisig.',\n    },\n    {\n      code: 101,\n      name: 'NotEnoughSigners',\n      msg: 'Not enough owners signed this transaction.',\n    },\n    {\n      code: 102,\n      name: 'TransactionAlreadySigned',\n      msg: 'Cannot delete a transaction that has been signed by an owner.',\n    },\n    {\n      code: 103,\n      name: 'Overflow',\n      msg: 'Overflow when adding.',\n    },\n    {\n      code: 104,\n      name: 'UnableToDelete',\n      msg: 'Cannot delete a transaction the owner did not create.',\n    },\n    {\n      code: 105,\n      name: 'AlreadyExecuted',\n      msg: 'The given transaction has already been executed.',\n    },\n    {\n      code: 106,\n      name: 'InvalidThreshold',\n      msg: 'Threshold must be less than or equal to the number of owners.',\n    },\n  ],\n};\n\nexport default idl;\n"]},"metadata":{},"sourceType":"module"}