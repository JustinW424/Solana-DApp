{"ast":null,"code":"const idl = {\n  version: '0.0.0',\n  name: 'registry',\n  instructions: [{\n    name: 'initialize',\n    accounts: [{\n      name: 'registrar',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'rewardEventQ',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'poolMint',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'rent',\n      isMut: false,\n      isSigner: false\n    }],\n    args: [{\n      name: 'mint',\n      type: 'publicKey'\n    }, {\n      name: 'authority',\n      type: 'publicKey'\n    }, {\n      name: 'nonce',\n      type: 'u8'\n    }, {\n      name: 'withdrawalTimelock',\n      type: 'i64'\n    }, {\n      name: 'stakeRate',\n      type: 'u64'\n    }, {\n      name: 'rewardQLen',\n      type: 'u32'\n    }]\n  }, {\n    name: 'updateRegistrar',\n    accounts: [{\n      name: 'registrar',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'authority',\n      isMut: false,\n      isSigner: true\n    }],\n    args: [{\n      name: 'newAuthority',\n      type: {\n        option: 'publicKey'\n      }\n    }, {\n      name: 'withdrawalTimelock',\n      type: {\n        option: 'i64'\n      }\n    }]\n  }, {\n    name: 'createMember',\n    accounts: [{\n      name: 'registrar',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'member',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'beneficiary',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'balances',\n      accounts: [{\n        name: 'spt',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultStake',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultPw',\n        isMut: true,\n        isSigner: false\n      }]\n    }, {\n      name: 'balancesLocked',\n      accounts: [{\n        name: 'spt',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultStake',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultPw',\n        isMut: true,\n        isSigner: false\n      }]\n    }, {\n      name: 'memberSigner',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'tokenProgram',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'rent',\n      isMut: false,\n      isSigner: false\n    }],\n    args: [{\n      name: 'nonce',\n      type: 'u8'\n    }]\n  }, {\n    name: 'updateMember',\n    accounts: [{\n      name: 'member',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'beneficiary',\n      isMut: false,\n      isSigner: true\n    }],\n    args: [{\n      name: 'metadata',\n      type: {\n        option: 'publicKey'\n      }\n    }]\n  }, {\n    name: 'deposit',\n    accounts: [{\n      name: 'member',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'beneficiary',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'vault',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'depositor',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'depositorAuthority',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'tokenProgram',\n      isMut: false,\n      isSigner: false\n    }],\n    args: [{\n      name: 'amount',\n      type: 'u64'\n    }]\n  }, {\n    name: 'depositLocked',\n    accounts: [{\n      name: 'vesting',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'vestingVault',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'depositorAuthority',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'tokenProgram',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'memberVault',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'memberSigner',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'registry',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'registrar',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'member',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'beneficiary',\n      isMut: false,\n      isSigner: true\n    }],\n    args: [{\n      name: 'amount',\n      type: 'u64'\n    }]\n  }, {\n    name: 'stake',\n    accounts: [{\n      name: 'registrar',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'rewardEventQ',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'poolMint',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'member',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'beneficiary',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'balances',\n      accounts: [{\n        name: 'spt',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultStake',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultPw',\n        isMut: true,\n        isSigner: false\n      }]\n    }, {\n      name: 'balancesLocked',\n      accounts: [{\n        name: 'spt',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultStake',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultPw',\n        isMut: true,\n        isSigner: false\n      }]\n    }, {\n      name: 'memberSigner',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'registrarSigner',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'clock',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'tokenProgram',\n      isMut: false,\n      isSigner: false\n    }],\n    args: [{\n      name: 'sptAmount',\n      type: 'u64'\n    }, {\n      name: 'locked',\n      type: 'bool'\n    }]\n  }, {\n    name: 'startUnstake',\n    accounts: [{\n      name: 'registrar',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'rewardEventQ',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'poolMint',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'pendingWithdrawal',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'member',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'beneficiary',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'balances',\n      accounts: [{\n        name: 'spt',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultStake',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultPw',\n        isMut: true,\n        isSigner: false\n      }]\n    }, {\n      name: 'balancesLocked',\n      accounts: [{\n        name: 'spt',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultStake',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vaultPw',\n        isMut: true,\n        isSigner: false\n      }]\n    }, {\n      name: 'memberSigner',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'tokenProgram',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'clock',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'rent',\n      isMut: false,\n      isSigner: false\n    }],\n    args: [{\n      name: 'sptAmount',\n      type: 'u64'\n    }, {\n      name: 'locked',\n      type: 'bool'\n    }]\n  }, {\n    name: 'endUnstake',\n    accounts: [{\n      name: 'registrar',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'member',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'beneficiary',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'pendingWithdrawal',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'vault',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'vaultPw',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'memberSigner',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'clock',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'tokenProgram',\n      isMut: false,\n      isSigner: false\n    }],\n    args: []\n  }, {\n    name: 'withdraw',\n    accounts: [{\n      name: 'registrar',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'member',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'beneficiary',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'vault',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'memberSigner',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'depositor',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'tokenProgram',\n      isMut: false,\n      isSigner: false\n    }],\n    args: [{\n      name: 'amount',\n      type: 'u64'\n    }]\n  }, {\n    name: 'withdrawLocked',\n    accounts: [{\n      name: 'vesting',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'vestingVault',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'vestingSigner',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'tokenProgram',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'memberVault',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'memberSigner',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'registry',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'registrar',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'member',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'beneficiary',\n      isMut: false,\n      isSigner: true\n    }],\n    args: [{\n      name: 'amount',\n      type: 'u64'\n    }]\n  }, {\n    name: 'dropReward',\n    accounts: [{\n      name: 'registrar',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'rewardEventQ',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'poolMint',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'vendor',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'vendorVault',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'depositor',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'depositorAuthority',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'tokenProgram',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'clock',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'rent',\n      isMut: false,\n      isSigner: false\n    }],\n    args: [{\n      name: 'kind',\n      type: {\n        defined: 'RewardVendorKind'\n      }\n    }, {\n      name: 'total',\n      type: 'u64'\n    }, {\n      name: 'expiryTs',\n      type: 'i64'\n    }, {\n      name: 'expiryReceiver',\n      type: 'publicKey'\n    }, {\n      name: 'nonce',\n      type: 'u8'\n    }]\n  }, {\n    name: 'claimReward',\n    accounts: [{\n      name: 'cmn',\n      accounts: [{\n        name: 'registrar',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'member',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'beneficiary',\n        isMut: false,\n        isSigner: true\n      }, {\n        name: 'balances',\n        accounts: [{\n          name: 'spt',\n          isMut: true,\n          isSigner: false\n        }, {\n          name: 'vault',\n          isMut: true,\n          isSigner: false\n        }, {\n          name: 'vaultStake',\n          isMut: true,\n          isSigner: false\n        }, {\n          name: 'vaultPw',\n          isMut: true,\n          isSigner: false\n        }]\n      }, {\n        name: 'balancesLocked',\n        accounts: [{\n          name: 'spt',\n          isMut: true,\n          isSigner: false\n        }, {\n          name: 'vault',\n          isMut: true,\n          isSigner: false\n        }, {\n          name: 'vaultStake',\n          isMut: true,\n          isSigner: false\n        }, {\n          name: 'vaultPw',\n          isMut: true,\n          isSigner: false\n        }]\n      }, {\n        name: 'vendor',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'vault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vendorSigner',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'tokenProgram',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'clock',\n        isMut: false,\n        isSigner: false\n      }]\n    }, {\n      name: 'to',\n      isMut: true,\n      isSigner: false\n    }],\n    args: []\n  }, {\n    name: 'claimRewardLocked',\n    accounts: [{\n      name: 'cmn',\n      accounts: [{\n        name: 'registrar',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'member',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'beneficiary',\n        isMut: false,\n        isSigner: true\n      }, {\n        name: 'balances',\n        accounts: [{\n          name: 'spt',\n          isMut: true,\n          isSigner: false\n        }, {\n          name: 'vault',\n          isMut: true,\n          isSigner: false\n        }, {\n          name: 'vaultStake',\n          isMut: true,\n          isSigner: false\n        }, {\n          name: 'vaultPw',\n          isMut: true,\n          isSigner: false\n        }]\n      }, {\n        name: 'balancesLocked',\n        accounts: [{\n          name: 'spt',\n          isMut: true,\n          isSigner: false\n        }, {\n          name: 'vault',\n          isMut: true,\n          isSigner: false\n        }, {\n          name: 'vaultStake',\n          isMut: true,\n          isSigner: false\n        }, {\n          name: 'vaultPw',\n          isMut: true,\n          isSigner: false\n        }]\n      }, {\n        name: 'vendor',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'vault',\n        isMut: true,\n        isSigner: false\n      }, {\n        name: 'vendorSigner',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'tokenProgram',\n        isMut: false,\n        isSigner: false\n      }, {\n        name: 'clock',\n        isMut: false,\n        isSigner: false\n      }]\n    }, {\n      name: 'registry',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'lockupProgram',\n      isMut: false,\n      isSigner: false\n    }],\n    args: [{\n      name: 'nonce',\n      type: 'u8'\n    }]\n  }, {\n    name: 'expireReward',\n    accounts: [{\n      name: 'registrar',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'vendor',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'vault',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'vendorSigner',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'expiryReceiver',\n      isMut: false,\n      isSigner: true\n    }, {\n      name: 'expiryReceiverToken',\n      isMut: true,\n      isSigner: false\n    }, {\n      name: 'tokenProgram',\n      isMut: false,\n      isSigner: false\n    }, {\n      name: 'clock',\n      isMut: false,\n      isSigner: false\n    }],\n    args: []\n  }],\n  state: {\n    struct: {\n      name: 'Registry',\n      type: {\n        kind: 'struct',\n        fields: [{\n          name: 'lockupProgram',\n          type: 'publicKey'\n        }]\n      }\n    },\n    methods: [{\n      name: 'new',\n      accounts: [{\n        name: 'lockupProgram',\n        isMut: false,\n        isSigner: false\n      }],\n      args: []\n    }, {\n      name: 'setLockupProgram',\n      accounts: [{\n        name: 'authority',\n        isMut: false,\n        isSigner: true\n      }],\n      args: [{\n        name: 'lockupProgram',\n        type: 'publicKey'\n      }]\n    }]\n  },\n  accounts: [{\n    name: 'Registrar',\n    type: {\n      kind: 'struct',\n      fields: [{\n        name: 'authority',\n        type: 'publicKey'\n      }, {\n        name: 'nonce',\n        type: 'u8'\n      }, {\n        name: 'withdrawalTimelock',\n        type: 'i64'\n      }, {\n        name: 'rewardEventQ',\n        type: 'publicKey'\n      }, {\n        name: 'mint',\n        type: 'publicKey'\n      }, {\n        name: 'poolMint',\n        type: 'publicKey'\n      }, {\n        name: 'stakeRate',\n        type: 'u64'\n      }]\n    }\n  }, {\n    name: 'Member',\n    type: {\n      kind: 'struct',\n      fields: [{\n        name: 'registrar',\n        type: 'publicKey'\n      }, {\n        name: 'beneficiary',\n        type: 'publicKey'\n      }, {\n        name: 'metadata',\n        type: 'publicKey'\n      }, {\n        name: 'balances',\n        type: {\n          defined: 'BalanceSandbox'\n        }\n      }, {\n        name: 'balancesLocked',\n        type: {\n          defined: 'BalanceSandbox'\n        }\n      }, {\n        name: 'rewardsCursor',\n        type: 'u32'\n      }, {\n        name: 'lastStakeTs',\n        type: 'i64'\n      }, {\n        name: 'nonce',\n        type: 'u8'\n      }]\n    }\n  }, {\n    name: 'PendingWithdrawal',\n    type: {\n      kind: 'struct',\n      fields: [{\n        name: 'registrar',\n        type: 'publicKey'\n      }, {\n        name: 'member',\n        type: 'publicKey'\n      }, {\n        name: 'burned',\n        type: 'bool'\n      }, {\n        name: 'pool',\n        type: 'publicKey'\n      }, {\n        name: 'startTs',\n        type: 'i64'\n      }, {\n        name: 'endTs',\n        type: 'i64'\n      }, {\n        name: 'amount',\n        type: 'u64'\n      }, {\n        name: 'locked',\n        type: 'bool'\n      }]\n    }\n  }, {\n    name: 'RewardQueue',\n    type: {\n      kind: 'struct',\n      fields: [{\n        name: 'head',\n        type: 'u32'\n      }, {\n        name: 'tail',\n        type: 'u32'\n      }, {\n        name: 'events',\n        type: {\n          vec: {\n            defined: 'RewardEvent'\n          }\n        }\n      }]\n    }\n  }, {\n    name: 'RewardVendor',\n    type: {\n      kind: 'struct',\n      fields: [{\n        name: 'registrar',\n        type: 'publicKey'\n      }, {\n        name: 'vault',\n        type: 'publicKey'\n      }, {\n        name: 'mint',\n        type: 'publicKey'\n      }, {\n        name: 'nonce',\n        type: 'u8'\n      }, {\n        name: 'poolTokenSupply',\n        type: 'u64'\n      }, {\n        name: 'rewardEventQCursor',\n        type: 'u32'\n      }, {\n        name: 'startTs',\n        type: 'i64'\n      }, {\n        name: 'expiryTs',\n        type: 'i64'\n      }, {\n        name: 'expiryReceiver',\n        type: 'publicKey'\n      }, {\n        name: 'from',\n        type: 'publicKey'\n      }, {\n        name: 'total',\n        type: 'u64'\n      }, {\n        name: 'expired',\n        type: 'bool'\n      }, {\n        name: 'kind',\n        type: {\n          defined: 'RewardVendorKind'\n        }\n      }]\n    }\n  }],\n  types: [{\n    name: 'BalanceSandbox',\n    type: {\n      kind: 'struct',\n      fields: [{\n        name: 'spt',\n        type: 'publicKey'\n      }, {\n        name: 'vault',\n        type: 'publicKey'\n      }, {\n        name: 'vaultStake',\n        type: 'publicKey'\n      }, {\n        name: 'vaultPw',\n        type: 'publicKey'\n      }]\n    }\n  }, {\n    name: 'RewardEvent',\n    type: {\n      kind: 'struct',\n      fields: [{\n        name: 'vendor',\n        type: 'publicKey'\n      }, {\n        name: 'ts',\n        type: 'i64'\n      }, {\n        name: 'locked',\n        type: 'bool'\n      }]\n    }\n  }, {\n    name: 'RewardVendorKind',\n    type: {\n      kind: 'enum',\n      variants: [{\n        name: 'Unlocked'\n      }, {\n        name: 'Locked',\n        fields: [{\n          name: 'start_ts',\n          type: 'i64'\n        }, {\n          name: 'end_ts',\n          type: 'i64'\n        }, {\n          name: 'period_count',\n          type: 'u64'\n        }]\n      }]\n    }\n  }],\n  errors: [{\n    code: 100,\n    name: 'RewardQAlreadyInitialized',\n    msg: 'The given reward queue has already been initialized.'\n  }, {\n    code: 101,\n    name: 'InvalidNonce',\n    msg: \"The nonce given doesn't derive a valid program address.\"\n  }, {\n    code: 102,\n    name: 'InvalidPoolMintAuthority',\n    msg: 'Invalid pool mint authority'\n  }, {\n    code: 103,\n    name: 'InvalidMemberSigner',\n    msg: \"Member signer doesn't match the derived address.\"\n  }, {\n    code: 104,\n    name: 'InvalidVaultDeposit',\n    msg: 'The given vault owner must match the signing depositor.'\n  }, {\n    code: 105,\n    name: 'InvalidDepositor',\n    msg: \"The signing depositor doesn't match either of the balance accounts\"\n  }, {\n    code: 106,\n    name: 'InvalidVault',\n    msg: 'The vault given does not match the vault expected.'\n  }, {\n    code: 107,\n    name: 'InvalidVaultOwner',\n    msg: 'Invalid vault owner.'\n  }, {\n    code: 108,\n    name: 'Unknown',\n    msg: 'An unknown error has occured.'\n  }, {\n    code: 109,\n    name: 'UnstakeTimelock',\n    msg: 'The unstake timelock has not yet expired.'\n  }, {\n    code: 110,\n    name: 'InsufficientReward',\n    msg: 'Reward vendors must have at least one token unit per pool token'\n  }, {\n    code: 111,\n    name: 'InvalidExpiry',\n    msg: 'Reward expiry must be after the current clock timestamp.'\n  }, {\n    code: 112,\n    name: 'VendorExpired',\n    msg: 'The reward vendor has been expired.'\n  }, {\n    code: 113,\n    name: 'CursorAlreadyProcessed',\n    msg: 'This reward has already been processed.'\n  }, {\n    code: 114,\n    name: 'NotStakedDuringDrop',\n    msg: 'The account was not staked at the time of this reward.'\n  }, {\n    code: 115,\n    name: 'VendorNotYetExpired',\n    msg: 'The vendor is not yet eligible for expiry.'\n  }, {\n    code: 116,\n    name: 'RewardsNeedsProcessing',\n    msg: 'Please collect your reward before otherwise using the program.'\n  }, {\n    code: 117,\n    name: 'ExpectedLockedVendor',\n    msg: 'Locked reward vendor expected but an unlocked vendor was given.'\n  }, {\n    code: 118,\n    name: 'ExpectedUnlockedVendor',\n    msg: 'Unlocked reward vendor expected but a locked vendor was given.'\n  }, {\n    code: 119,\n    name: 'InvalidVestingSigner',\n    msg: 'Locked deposit from an invalid deposit authority.'\n  }, {\n    code: 120,\n    name: 'UnrealizedReward',\n    msg: 'Locked rewards cannot be realized until one unstaked all tokens.'\n  }, {\n    code: 121,\n    name: 'InvalidBeneficiary',\n    msg: \"The beneficiary doesn't match.\"\n  }, {\n    code: 122,\n    name: 'InvalidRealizorMetadata',\n    msg: 'The given member account does not match the realizor metadata.'\n  }, {\n    code: 123,\n    name: 'InvalidVestingSchedule',\n    msg: 'Invalid vesting schedule for the locked reward.'\n  }, {\n    code: 124,\n    name: 'InvalidProgramAuthority',\n    msg: 'Please specify the correct authority for this program.'\n  }]\n};\nexport default idl;","map":{"version":3,"sources":["F:/jobs/stake_in_solana/source/src/idl/registry.ts"],"names":["idl","version","name","instructions","accounts","isMut","isSigner","args","type","option","defined","state","struct","kind","fields","methods","vec","types","variants","errors","code","msg"],"mappings":"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","sourcesContent":["import { Idl } from '@project-serum/anchor';\n\nconst idl: Idl = {\n  version: '0.0.0',\n  name: 'registry',\n  instructions: [\n    {\n      name: 'initialize',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'rewardEventQ',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'mint',\n          type: 'publicKey',\n        },\n        {\n          name: 'authority',\n          type: 'publicKey',\n        },\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n        {\n          name: 'withdrawalTimelock',\n          type: 'i64',\n        },\n        {\n          name: 'stakeRate',\n          type: 'u64',\n        },\n        {\n          name: 'rewardQLen',\n          type: 'u32',\n        },\n      ],\n    },\n    {\n      name: 'updateRegistrar',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'authority',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'newAuthority',\n          type: {\n            option: 'publicKey',\n          },\n        },\n        {\n          name: 'withdrawalTimelock',\n          type: {\n            option: 'i64',\n          },\n        },\n      ],\n    },\n    {\n      name: 'createMember',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'balances',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'balancesLocked',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'updateMember',\n      accounts: [\n        {\n          name: 'member',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'metadata',\n          type: {\n            option: 'publicKey',\n          },\n        },\n      ],\n    },\n    {\n      name: 'deposit',\n      accounts: [\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositorAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'depositLocked',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'vestingVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositorAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'memberVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registry',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'stake',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rewardEventQ',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'balances',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'balancesLocked',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registrarSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'sptAmount',\n          type: 'u64',\n        },\n        {\n          name: 'locked',\n          type: 'bool',\n        },\n      ],\n    },\n    {\n      name: 'startUnstake',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rewardEventQ',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'pendingWithdrawal',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'balances',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'balancesLocked',\n          accounts: [\n            {\n              name: 'spt',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultStake',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vaultPw',\n              isMut: true,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'sptAmount',\n          type: 'u64',\n        },\n        {\n          name: 'locked',\n          type: 'bool',\n        },\n      ],\n    },\n    {\n      name: 'endUnstake',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'pendingWithdrawal',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vaultPw',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'withdraw',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'depositor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'withdrawLocked',\n      accounts: [\n        {\n          name: 'vesting',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'vestingVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vestingSigner',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'memberVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'memberSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registry',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'member',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'beneficiary',\n          isMut: false,\n          isSigner: true,\n        },\n      ],\n      args: [\n        {\n          name: 'amount',\n          type: 'u64',\n        },\n      ],\n    },\n    {\n      name: 'dropReward',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rewardEventQ',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'poolMint',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'vendor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vendorVault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'depositorAuthority',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'rent',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'kind',\n          type: {\n            defined: 'RewardVendorKind',\n          },\n        },\n        {\n          name: 'total',\n          type: 'u64',\n        },\n        {\n          name: 'expiryTs',\n          type: 'i64',\n        },\n        {\n          name: 'expiryReceiver',\n          type: 'publicKey',\n        },\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'claimReward',\n      accounts: [\n        {\n          name: 'cmn',\n          accounts: [\n            {\n              name: 'registrar',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'member',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'beneficiary',\n              isMut: false,\n              isSigner: true,\n            },\n            {\n              name: 'balances',\n              accounts: [\n                {\n                  name: 'spt',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vault',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultStake',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultPw',\n                  isMut: true,\n                  isSigner: false,\n                },\n              ],\n            },\n            {\n              name: 'balancesLocked',\n              accounts: [\n                {\n                  name: 'spt',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vault',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultStake',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultPw',\n                  isMut: true,\n                  isSigner: false,\n                },\n              ],\n            },\n            {\n              name: 'vendor',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vendorSigner',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'tokenProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'clock',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'to',\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: 'claimRewardLocked',\n      accounts: [\n        {\n          name: 'cmn',\n          accounts: [\n            {\n              name: 'registrar',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'member',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'beneficiary',\n              isMut: false,\n              isSigner: true,\n            },\n            {\n              name: 'balances',\n              accounts: [\n                {\n                  name: 'spt',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vault',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultStake',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultPw',\n                  isMut: true,\n                  isSigner: false,\n                },\n              ],\n            },\n            {\n              name: 'balancesLocked',\n              accounts: [\n                {\n                  name: 'spt',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vault',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultStake',\n                  isMut: true,\n                  isSigner: false,\n                },\n                {\n                  name: 'vaultPw',\n                  isMut: true,\n                  isSigner: false,\n                },\n              ],\n            },\n            {\n              name: 'vendor',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'vault',\n              isMut: true,\n              isSigner: false,\n            },\n            {\n              name: 'vendorSigner',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'tokenProgram',\n              isMut: false,\n              isSigner: false,\n            },\n            {\n              name: 'clock',\n              isMut: false,\n              isSigner: false,\n            },\n          ],\n        },\n        {\n          name: 'registry',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'lockupProgram',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: 'nonce',\n          type: 'u8',\n        },\n      ],\n    },\n    {\n      name: 'expireReward',\n      accounts: [\n        {\n          name: 'registrar',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'vendor',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vault',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'vendorSigner',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'expiryReceiver',\n          isMut: false,\n          isSigner: true,\n        },\n        {\n          name: 'expiryReceiverToken',\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: 'tokenProgram',\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: 'clock',\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n  ],\n  state: {\n    struct: {\n      name: 'Registry',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'lockupProgram',\n            type: 'publicKey',\n          },\n        ],\n      },\n    },\n    methods: [\n      {\n        name: 'new',\n        accounts: [\n          {\n            name: 'lockupProgram',\n            isMut: false,\n            isSigner: false,\n          },\n        ],\n        args: [],\n      },\n      {\n        name: 'setLockupProgram',\n        accounts: [\n          {\n            name: 'authority',\n            isMut: false,\n            isSigner: true,\n          },\n        ],\n        args: [\n          {\n            name: 'lockupProgram',\n            type: 'publicKey',\n          },\n        ],\n      },\n    ],\n  },\n  accounts: [\n    {\n      name: 'Registrar',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'authority',\n            type: 'publicKey',\n          },\n          {\n            name: 'nonce',\n            type: 'u8',\n          },\n          {\n            name: 'withdrawalTimelock',\n            type: 'i64',\n          },\n          {\n            name: 'rewardEventQ',\n            type: 'publicKey',\n          },\n          {\n            name: 'mint',\n            type: 'publicKey',\n          },\n          {\n            name: 'poolMint',\n            type: 'publicKey',\n          },\n          {\n            name: 'stakeRate',\n            type: 'u64',\n          },\n        ],\n      },\n    },\n    {\n      name: 'Member',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'registrar',\n            type: 'publicKey',\n          },\n          {\n            name: 'beneficiary',\n            type: 'publicKey',\n          },\n          {\n            name: 'metadata',\n            type: 'publicKey',\n          },\n          {\n            name: 'balances',\n            type: {\n              defined: 'BalanceSandbox',\n            },\n          },\n          {\n            name: 'balancesLocked',\n            type: {\n              defined: 'BalanceSandbox',\n            },\n          },\n          {\n            name: 'rewardsCursor',\n            type: 'u32',\n          },\n          {\n            name: 'lastStakeTs',\n            type: 'i64',\n          },\n          {\n            name: 'nonce',\n            type: 'u8',\n          },\n        ],\n      },\n    },\n    {\n      name: 'PendingWithdrawal',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'registrar',\n            type: 'publicKey',\n          },\n          {\n            name: 'member',\n            type: 'publicKey',\n          },\n          {\n            name: 'burned',\n            type: 'bool',\n          },\n          {\n            name: 'pool',\n            type: 'publicKey',\n          },\n          {\n            name: 'startTs',\n            type: 'i64',\n          },\n          {\n            name: 'endTs',\n            type: 'i64',\n          },\n          {\n            name: 'amount',\n            type: 'u64',\n          },\n          {\n            name: 'locked',\n            type: 'bool',\n          },\n        ],\n      },\n    },\n    {\n      name: 'RewardQueue',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'head',\n            type: 'u32',\n          },\n          {\n            name: 'tail',\n            type: 'u32',\n          },\n          {\n            name: 'events',\n            type: {\n              vec: {\n                defined: 'RewardEvent',\n              },\n            },\n          },\n        ],\n      },\n    },\n    {\n      name: 'RewardVendor',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'registrar',\n            type: 'publicKey',\n          },\n          {\n            name: 'vault',\n            type: 'publicKey',\n          },\n          {\n            name: 'mint',\n            type: 'publicKey',\n          },\n          {\n            name: 'nonce',\n            type: 'u8',\n          },\n          {\n            name: 'poolTokenSupply',\n            type: 'u64',\n          },\n          {\n            name: 'rewardEventQCursor',\n            type: 'u32',\n          },\n          {\n            name: 'startTs',\n            type: 'i64',\n          },\n          {\n            name: 'expiryTs',\n            type: 'i64',\n          },\n          {\n            name: 'expiryReceiver',\n            type: 'publicKey',\n          },\n          {\n            name: 'from',\n            type: 'publicKey',\n          },\n          {\n            name: 'total',\n            type: 'u64',\n          },\n          {\n            name: 'expired',\n            type: 'bool',\n          },\n          {\n            name: 'kind',\n            type: {\n              defined: 'RewardVendorKind',\n            },\n          },\n        ],\n      },\n    },\n  ],\n  types: [\n    {\n      name: 'BalanceSandbox',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'spt',\n            type: 'publicKey',\n          },\n          {\n            name: 'vault',\n            type: 'publicKey',\n          },\n          {\n            name: 'vaultStake',\n            type: 'publicKey',\n          },\n          {\n            name: 'vaultPw',\n            type: 'publicKey',\n          },\n        ],\n      },\n    },\n    {\n      name: 'RewardEvent',\n      type: {\n        kind: 'struct',\n        fields: [\n          {\n            name: 'vendor',\n            type: 'publicKey',\n          },\n          {\n            name: 'ts',\n            type: 'i64',\n          },\n          {\n            name: 'locked',\n            type: 'bool',\n          },\n        ],\n      },\n    },\n    {\n      name: 'RewardVendorKind',\n      type: {\n        kind: 'enum',\n        variants: [\n          {\n            name: 'Unlocked',\n          },\n          {\n            name: 'Locked',\n            fields: [\n              {\n                name: 'start_ts',\n                type: 'i64',\n              },\n              {\n                name: 'end_ts',\n                type: 'i64',\n              },\n              {\n                name: 'period_count',\n                type: 'u64',\n              },\n            ],\n          },\n        ],\n      },\n    },\n  ],\n  errors: [\n    {\n      code: 100,\n      name: 'RewardQAlreadyInitialized',\n      msg: 'The given reward queue has already been initialized.',\n    },\n    {\n      code: 101,\n      name: 'InvalidNonce',\n      msg: \"The nonce given doesn't derive a valid program address.\",\n    },\n    {\n      code: 102,\n      name: 'InvalidPoolMintAuthority',\n      msg: 'Invalid pool mint authority',\n    },\n    {\n      code: 103,\n      name: 'InvalidMemberSigner',\n      msg: \"Member signer doesn't match the derived address.\",\n    },\n    {\n      code: 104,\n      name: 'InvalidVaultDeposit',\n      msg: 'The given vault owner must match the signing depositor.',\n    },\n    {\n      code: 105,\n      name: 'InvalidDepositor',\n      msg: \"The signing depositor doesn't match either of the balance accounts\",\n    },\n    {\n      code: 106,\n      name: 'InvalidVault',\n      msg: 'The vault given does not match the vault expected.',\n    },\n    {\n      code: 107,\n      name: 'InvalidVaultOwner',\n      msg: 'Invalid vault owner.',\n    },\n    {\n      code: 108,\n      name: 'Unknown',\n      msg: 'An unknown error has occured.',\n    },\n    {\n      code: 109,\n      name: 'UnstakeTimelock',\n      msg: 'The unstake timelock has not yet expired.',\n    },\n    {\n      code: 110,\n      name: 'InsufficientReward',\n      msg: 'Reward vendors must have at least one token unit per pool token',\n    },\n    {\n      code: 111,\n      name: 'InvalidExpiry',\n      msg: 'Reward expiry must be after the current clock timestamp.',\n    },\n    {\n      code: 112,\n      name: 'VendorExpired',\n      msg: 'The reward vendor has been expired.',\n    },\n    {\n      code: 113,\n      name: 'CursorAlreadyProcessed',\n      msg: 'This reward has already been processed.',\n    },\n    {\n      code: 114,\n      name: 'NotStakedDuringDrop',\n      msg: 'The account was not staked at the time of this reward.',\n    },\n    {\n      code: 115,\n      name: 'VendorNotYetExpired',\n      msg: 'The vendor is not yet eligible for expiry.',\n    },\n    {\n      code: 116,\n      name: 'RewardsNeedsProcessing',\n      msg: 'Please collect your reward before otherwise using the program.',\n    },\n    {\n      code: 117,\n      name: 'ExpectedLockedVendor',\n      msg: 'Locked reward vendor expected but an unlocked vendor was given.',\n    },\n    {\n      code: 118,\n      name: 'ExpectedUnlockedVendor',\n      msg: 'Unlocked reward vendor expected but a locked vendor was given.',\n    },\n    {\n      code: 119,\n      name: 'InvalidVestingSigner',\n      msg: 'Locked deposit from an invalid deposit authority.',\n    },\n    {\n      code: 120,\n      name: 'UnrealizedReward',\n      msg: 'Locked rewards cannot be realized until one unstaked all tokens.',\n    },\n    {\n      code: 121,\n      name: 'InvalidBeneficiary',\n      msg: \"The beneficiary doesn't match.\",\n    },\n    {\n      code: 122,\n      name: 'InvalidRealizorMetadata',\n      msg: 'The given member account does not match the realizor metadata.',\n    },\n    {\n      code: 123,\n      name: 'InvalidVestingSchedule',\n      msg: 'Invalid vesting schedule for the locked reward.',\n    },\n    {\n      code: 124,\n      name: 'InvalidProgramAuthority',\n      msg: 'Please specify the correct authority for this program.',\n    },\n  ],\n};\n\nexport default idl;\n"]},"metadata":{},"sourceType":"module"}