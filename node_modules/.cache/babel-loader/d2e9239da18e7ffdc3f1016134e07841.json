{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sleep = exports.parseTokenAccount = exports.getTokenAccount = exports.parseMintAccount = exports.getMintInfo = exports.createAccountRentExempt = exports.createTokenAccountInstrs = exports.createTokenAccount = exports.createMintAndVault = exports.createMintInstructions = exports.createMint = exports.SPL_SHARED_MEMORY_ID = exports.connection = exports.simulateTransaction = exports.token = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst spl_token_1 = require(\"@solana/spl-token\");\n\nconst serum_1 = require(\"@project-serum/serum\");\n\n__exportStar(require(\"./provider\"), exports);\n\nexports.token = __importStar(require(\"./token\"));\n\nvar simulate_transaction_1 = require(\"./simulate-transaction\");\n\nObject.defineProperty(exports, \"simulateTransaction\", {\n  enumerable: true,\n  get: function () {\n    return simulate_transaction_1.simulateTransaction;\n  }\n});\nexports.connection = __importStar(require(\"./connection\"));\nexports.SPL_SHARED_MEMORY_ID = new web3_js_1.PublicKey('shmem4EWT2sPdVGvTZCzXXRAURL9G5vpPxNwSeKhHUL');\n\nasync function createMint(provider, authority, decimals) {\n  if (authority === undefined) {\n    authority = provider.wallet.publicKey;\n  }\n\n  const mint = new web3_js_1.Account();\n  const instructions = await createMintInstructions(provider, authority, mint.publicKey, decimals);\n  const tx = new web3_js_1.Transaction();\n  tx.add(...instructions);\n  await provider.send(tx, [mint]);\n  return mint.publicKey;\n}\n\nexports.createMint = createMint;\n\nasync function createMintInstructions(provider, authority, mint, decimals) {\n  let instructions = [web3_js_1.SystemProgram.createAccount({\n    fromPubkey: provider.wallet.publicKey,\n    newAccountPubkey: mint,\n    space: 82,\n    lamports: await provider.connection.getMinimumBalanceForRentExemption(82),\n    programId: serum_1.TokenInstructions.TOKEN_PROGRAM_ID\n  }), serum_1.TokenInstructions.initializeMint({\n    mint,\n    decimals: decimals !== null && decimals !== void 0 ? decimals : 0,\n    mintAuthority: authority\n  })];\n  return instructions;\n}\n\nexports.createMintInstructions = createMintInstructions;\n\nasync function createMintAndVault(provider, amount, owner, decimals) {\n  if (owner === undefined) {\n    owner = provider.wallet.publicKey;\n  }\n\n  const mint = new web3_js_1.Account();\n  const vault = new web3_js_1.Account();\n  const tx = new web3_js_1.Transaction();\n  tx.add(web3_js_1.SystemProgram.createAccount({\n    fromPubkey: provider.wallet.publicKey,\n    newAccountPubkey: mint.publicKey,\n    space: 82,\n    lamports: await provider.connection.getMinimumBalanceForRentExemption(82),\n    programId: serum_1.TokenInstructions.TOKEN_PROGRAM_ID\n  }), serum_1.TokenInstructions.initializeMint({\n    mint: mint.publicKey,\n    decimals: decimals !== null && decimals !== void 0 ? decimals : 0,\n    mintAuthority: provider.wallet.publicKey\n  }), web3_js_1.SystemProgram.createAccount({\n    fromPubkey: provider.wallet.publicKey,\n    newAccountPubkey: vault.publicKey,\n    space: 165,\n    lamports: await provider.connection.getMinimumBalanceForRentExemption(165),\n    programId: serum_1.TokenInstructions.TOKEN_PROGRAM_ID\n  }), serum_1.TokenInstructions.initializeAccount({\n    account: vault.publicKey,\n    mint: mint.publicKey,\n    owner\n  }), serum_1.TokenInstructions.mintTo({\n    mint: mint.publicKey,\n    destination: vault.publicKey,\n    amount,\n    mintAuthority: provider.wallet.publicKey\n  }));\n  await provider.send(tx, [mint, vault]);\n  return [mint.publicKey, vault.publicKey];\n}\n\nexports.createMintAndVault = createMintAndVault;\n\nasync function createTokenAccount(provider, mint, owner) {\n  const vault = new web3_js_1.Account();\n  const tx = new web3_js_1.Transaction();\n  tx.add(...(await createTokenAccountInstrs(provider, vault.publicKey, mint, owner)));\n  await provider.send(tx, [vault]);\n  return vault.publicKey;\n}\n\nexports.createTokenAccount = createTokenAccount;\n\nasync function createTokenAccountInstrs(provider, newAccountPubkey, mint, owner, lamports) {\n  if (lamports === undefined) {\n    lamports = await provider.connection.getMinimumBalanceForRentExemption(165);\n  }\n\n  return [web3_js_1.SystemProgram.createAccount({\n    fromPubkey: provider.wallet.publicKey,\n    newAccountPubkey,\n    space: 165,\n    lamports,\n    programId: serum_1.TokenInstructions.TOKEN_PROGRAM_ID\n  }), serum_1.TokenInstructions.initializeAccount({\n    account: newAccountPubkey,\n    mint,\n    owner\n  })];\n}\n\nexports.createTokenAccountInstrs = createTokenAccountInstrs;\n\nasync function createAccountRentExempt(provider, programId, size) {\n  const acc = new web3_js_1.Account();\n  const tx = new web3_js_1.Transaction();\n  tx.add(web3_js_1.SystemProgram.createAccount({\n    fromPubkey: provider.wallet.publicKey,\n    newAccountPubkey: acc.publicKey,\n    space: size,\n    lamports: await provider.connection.getMinimumBalanceForRentExemption(size),\n    programId\n  }));\n  await provider.send(tx, [acc]);\n  return acc;\n}\n\nexports.createAccountRentExempt = createAccountRentExempt;\n\nasync function getMintInfo(provider, addr) {\n  let depositorAccInfo = await provider.connection.getAccountInfo(addr);\n\n  if (depositorAccInfo === null) {\n    throw new Error('Failed to find token account');\n  }\n\n  return parseMintAccount(depositorAccInfo.data);\n}\n\nexports.getMintInfo = getMintInfo;\n\nfunction parseMintAccount(data) {\n  const m = spl_token_1.MintLayout.decode(data);\n  m.mintAuthority = new web3_js_1.PublicKey(m.mintAuthority);\n  m.supply = spl_token_1.u64.fromBuffer(m.supply);\n  m.isInitialized = m.state !== 0;\n  return m;\n}\n\nexports.parseMintAccount = parseMintAccount;\n\nasync function getTokenAccount(provider, addr) {\n  let depositorAccInfo = await provider.connection.getAccountInfo(addr);\n\n  if (depositorAccInfo === null) {\n    throw new Error('Failed to find token account');\n  }\n\n  return parseTokenAccount(depositorAccInfo.data);\n}\n\nexports.getTokenAccount = getTokenAccount;\n\nfunction parseTokenAccount(data) {\n  const accountInfo = spl_token_1.AccountLayout.decode(data);\n  accountInfo.mint = new web3_js_1.PublicKey(accountInfo.mint);\n  accountInfo.owner = new web3_js_1.PublicKey(accountInfo.owner);\n  accountInfo.amount = spl_token_1.u64.fromBuffer(accountInfo.amount);\n\n  if (accountInfo.delegateOption === 0) {\n    accountInfo.delegate = null; // eslint-disable-next-line new-cap\n\n    accountInfo.delegatedAmount = new spl_token_1.u64(0);\n  } else {\n    accountInfo.delegate = new web3_js_1.PublicKey(accountInfo.delegate);\n    accountInfo.delegatedAmount = spl_token_1.u64.fromBuffer(accountInfo.delegatedAmount);\n  }\n\n  accountInfo.isInitialized = accountInfo.state !== 0;\n  accountInfo.isFrozen = accountInfo.state === 2;\n\n  if (accountInfo.isNativeOption === 1) {\n    accountInfo.rentExemptReserve = spl_token_1.u64.fromBuffer(accountInfo.isNative);\n    accountInfo.isNative = true;\n  } else {\n    accountInfo.rentExemptReserve = null;\n    accountInfo.isNative = false;\n  }\n\n  if (accountInfo.closeAuthorityOption === 0) {\n    accountInfo.closeAuthority = null;\n  } else {\n    accountInfo.closeAuthority = new web3_js_1.PublicKey(accountInfo.closeAuthority);\n  }\n\n  return accountInfo;\n}\n\nexports.parseTokenAccount = parseTokenAccount;\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexports.sleep = sleep;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sleep = exports.parseTokenAccount = exports.getTokenAccount = exports.parseMintAccount = exports.getMintInfo = exports.createAccountRentExempt = exports.createTokenAccountInstrs = exports.createTokenAccount = exports.createMintAndVault = exports.createMintInstructions = exports.createMint = exports.SPL_SHARED_MEMORY_ID = exports.connection = exports.simulateTransaction = exports.token = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst serum_1 = require(\"@project-serum/serum\");\n__exportStar(require(\"./provider\"), exports);\nexports.token = __importStar(require(\"./token\"));\nvar simulate_transaction_1 = require(\"./simulate-transaction\");\nObject.defineProperty(exports, \"simulateTransaction\", { enumerable: true, get: function () { return simulate_transaction_1.simulateTransaction; } });\nexports.connection = __importStar(require(\"./connection\"));\nexports.SPL_SHARED_MEMORY_ID = new web3_js_1.PublicKey('shmem4EWT2sPdVGvTZCzXXRAURL9G5vpPxNwSeKhHUL');\nasync function createMint(provider, authority, decimals) {\n    if (authority === undefined) {\n        authority = provider.wallet.publicKey;\n    }\n    const mint = new web3_js_1.Account();\n    const instructions = await createMintInstructions(provider, authority, mint.publicKey, decimals);\n    const tx = new web3_js_1.Transaction();\n    tx.add(...instructions);\n    await provider.send(tx, [mint]);\n    return mint.publicKey;\n}\nexports.createMint = createMint;\nasync function createMintInstructions(provider, authority, mint, decimals) {\n    let instructions = [\n        web3_js_1.SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey: mint,\n            space: 82,\n            lamports: await provider.connection.getMinimumBalanceForRentExemption(82),\n            programId: serum_1.TokenInstructions.TOKEN_PROGRAM_ID,\n        }),\n        serum_1.TokenInstructions.initializeMint({\n            mint,\n            decimals: decimals !== null && decimals !== void 0 ? decimals : 0,\n            mintAuthority: authority,\n        }),\n    ];\n    return instructions;\n}\nexports.createMintInstructions = createMintInstructions;\nasync function createMintAndVault(provider, amount, owner, decimals) {\n    if (owner === undefined) {\n        owner = provider.wallet.publicKey;\n    }\n    const mint = new web3_js_1.Account();\n    const vault = new web3_js_1.Account();\n    const tx = new web3_js_1.Transaction();\n    tx.add(web3_js_1.SystemProgram.createAccount({\n        fromPubkey: provider.wallet.publicKey,\n        newAccountPubkey: mint.publicKey,\n        space: 82,\n        lamports: await provider.connection.getMinimumBalanceForRentExemption(82),\n        programId: serum_1.TokenInstructions.TOKEN_PROGRAM_ID,\n    }), serum_1.TokenInstructions.initializeMint({\n        mint: mint.publicKey,\n        decimals: decimals !== null && decimals !== void 0 ? decimals : 0,\n        mintAuthority: provider.wallet.publicKey,\n    }), web3_js_1.SystemProgram.createAccount({\n        fromPubkey: provider.wallet.publicKey,\n        newAccountPubkey: vault.publicKey,\n        space: 165,\n        lamports: await provider.connection.getMinimumBalanceForRentExemption(165),\n        programId: serum_1.TokenInstructions.TOKEN_PROGRAM_ID,\n    }), serum_1.TokenInstructions.initializeAccount({\n        account: vault.publicKey,\n        mint: mint.publicKey,\n        owner,\n    }), serum_1.TokenInstructions.mintTo({\n        mint: mint.publicKey,\n        destination: vault.publicKey,\n        amount,\n        mintAuthority: provider.wallet.publicKey,\n    }));\n    await provider.send(tx, [mint, vault]);\n    return [mint.publicKey, vault.publicKey];\n}\nexports.createMintAndVault = createMintAndVault;\nasync function createTokenAccount(provider, mint, owner) {\n    const vault = new web3_js_1.Account();\n    const tx = new web3_js_1.Transaction();\n    tx.add(...(await createTokenAccountInstrs(provider, vault.publicKey, mint, owner)));\n    await provider.send(tx, [vault]);\n    return vault.publicKey;\n}\nexports.createTokenAccount = createTokenAccount;\nasync function createTokenAccountInstrs(provider, newAccountPubkey, mint, owner, lamports) {\n    if (lamports === undefined) {\n        lamports = await provider.connection.getMinimumBalanceForRentExemption(165);\n    }\n    return [\n        web3_js_1.SystemProgram.createAccount({\n            fromPubkey: provider.wallet.publicKey,\n            newAccountPubkey,\n            space: 165,\n            lamports,\n            programId: serum_1.TokenInstructions.TOKEN_PROGRAM_ID,\n        }),\n        serum_1.TokenInstructions.initializeAccount({\n            account: newAccountPubkey,\n            mint,\n            owner,\n        }),\n    ];\n}\nexports.createTokenAccountInstrs = createTokenAccountInstrs;\nasync function createAccountRentExempt(provider, programId, size) {\n    const acc = new web3_js_1.Account();\n    const tx = new web3_js_1.Transaction();\n    tx.add(web3_js_1.SystemProgram.createAccount({\n        fromPubkey: provider.wallet.publicKey,\n        newAccountPubkey: acc.publicKey,\n        space: size,\n        lamports: await provider.connection.getMinimumBalanceForRentExemption(size),\n        programId,\n    }));\n    await provider.send(tx, [acc]);\n    return acc;\n}\nexports.createAccountRentExempt = createAccountRentExempt;\nasync function getMintInfo(provider, addr) {\n    let depositorAccInfo = await provider.connection.getAccountInfo(addr);\n    if (depositorAccInfo === null) {\n        throw new Error('Failed to find token account');\n    }\n    return parseMintAccount(depositorAccInfo.data);\n}\nexports.getMintInfo = getMintInfo;\nfunction parseMintAccount(data) {\n    const m = spl_token_1.MintLayout.decode(data);\n    m.mintAuthority = new web3_js_1.PublicKey(m.mintAuthority);\n    m.supply = spl_token_1.u64.fromBuffer(m.supply);\n    m.isInitialized = m.state !== 0;\n    return m;\n}\nexports.parseMintAccount = parseMintAccount;\nasync function getTokenAccount(provider, addr) {\n    let depositorAccInfo = await provider.connection.getAccountInfo(addr);\n    if (depositorAccInfo === null) {\n        throw new Error('Failed to find token account');\n    }\n    return parseTokenAccount(depositorAccInfo.data);\n}\nexports.getTokenAccount = getTokenAccount;\nfunction parseTokenAccount(data) {\n    const accountInfo = spl_token_1.AccountLayout.decode(data);\n    accountInfo.mint = new web3_js_1.PublicKey(accountInfo.mint);\n    accountInfo.owner = new web3_js_1.PublicKey(accountInfo.owner);\n    accountInfo.amount = spl_token_1.u64.fromBuffer(accountInfo.amount);\n    if (accountInfo.delegateOption === 0) {\n        accountInfo.delegate = null;\n        // eslint-disable-next-line new-cap\n        accountInfo.delegatedAmount = new spl_token_1.u64(0);\n    }\n    else {\n        accountInfo.delegate = new web3_js_1.PublicKey(accountInfo.delegate);\n        accountInfo.delegatedAmount = spl_token_1.u64.fromBuffer(accountInfo.delegatedAmount);\n    }\n    accountInfo.isInitialized = accountInfo.state !== 0;\n    accountInfo.isFrozen = accountInfo.state === 2;\n    if (accountInfo.isNativeOption === 1) {\n        accountInfo.rentExemptReserve = spl_token_1.u64.fromBuffer(accountInfo.isNative);\n        accountInfo.isNative = true;\n    }\n    else {\n        accountInfo.rentExemptReserve = null;\n        accountInfo.isNative = false;\n    }\n    if (accountInfo.closeAuthorityOption === 0) {\n        accountInfo.closeAuthority = null;\n    }\n    else {\n        accountInfo.closeAuthority = new web3_js_1.PublicKey(accountInfo.closeAuthority);\n    }\n    return accountInfo;\n}\nexports.parseTokenAccount = parseTokenAccount;\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexports.sleep = sleep;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}