{"ast":null,"code":"var _jsxFileName = \"F:\\\\jobs\\\\stake_in_solana\\\\source\\\\src\\\\components\\\\common\\\\VestingAccountsSelect.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PublicKey } from '@solana/web3.js';\nimport { toDisplay } from '../../utils/tokens';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VestingAccountsSelect(p) {\n  _s();\n\n  const {\n    mint,\n    decimals,\n    variant,\n    onChange,\n    style,\n    deposit\n  } = p;\n  const vestings = useSelector(state => {\n    if (!mint) {\n      return [];\n    }\n\n    return state.lockup.vestings.map(v => {\n      return {\n        publicKey: v,\n        account: state.accounts[v.toString()]\n      };\n    }).filter(v => v.account.mint.equals(mint));\n  });\n  const [fromAccount, setFromAccount] = useState('');\n  return /*#__PURE__*/_jsxDEV(Select, {\n    style: style,\n    variant: variant,\n    fullWidth: true,\n    value: fromAccount,\n    onChange: e => {\n      const pk = e.target.value;\n      setFromAccount(pk);\n      const pubkey = new PublicKey(pk);\n      const v = vestings.filter(v => v.publicKey.equals(pubkey)).pop();\n      onChange(pubkey, availableAmount(v, deposit));\n    },\n    children: vestings.length === 0 ? /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: '',\n      children: \"No vesting accounts found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : vestings.map(v => {\n      return /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: v.publicKey.toString(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: `${v.publicKey.toString()}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              float: 'right',\n              color: '#ccc'\n            },\n            children: `${toDisplay(availableAmount(v, deposit), decimals)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VestingAccountsSelect, \"9KYl17Ty+Iqpnp632U94b5+3rOU=\", false, function () {\n  return [useSelector];\n});\n\n_c = VestingAccountsSelect;\n\nfunction availableAmount(v, deposit) {\n  return deposit ? v.account.outstanding.sub(v.account.whitelistOwned) : v.account.whitelistOwned;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"VestingAccountsSelect\");","map":{"version":3,"sources":["F:/jobs/stake_in_solana/source/src/components/common/VestingAccountsSelect.tsx"],"names":["React","useState","useSelector","Select","MenuItem","PublicKey","toDisplay","VestingAccountsSelect","p","mint","decimals","variant","onChange","style","deposit","vestings","state","lockup","map","v","publicKey","account","accounts","toString","filter","equals","fromAccount","setFromAccount","e","pk","target","value","pubkey","pop","availableAmount","length","width","display","justifyContent","float","color","outstanding","sub","whitelistOwned"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BN from 'bn.js';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PublicKey } from '@solana/web3.js';\nimport { State as StoreState, ProgramAccount } from '../../store/reducer';\nimport { toDisplay } from '../../utils/tokens';\n\ntype Props = {\n  style?: any;\n  mint?: PublicKey | null;\n  decimals: number;\n  variant?: 'outlined' | 'standard';\n  onChange: (from: PublicKey, maxAmount: BN) => void;\n  deposit?: boolean;\n};\n\nexport default function VestingAccountsSelect(p: Props) {\n  const { mint, decimals, variant, onChange, style, deposit } = p;\n  const vestings: ProgramAccount[] = useSelector((state: StoreState) => {\n    if (!mint) {\n      return [];\n    }\n    return state.lockup.vestings\n      .map(v => {\n        return { publicKey: v, account: state.accounts[v.toString()] };\n      })\n      .filter(v => v.account.mint.equals(mint));\n  });\n  const [fromAccount, setFromAccount] = useState('');\n  return (\n    <Select\n      style={style}\n      variant={variant}\n      fullWidth\n      value={fromAccount}\n      onChange={e => {\n        const pk = e.target.value as string;\n        setFromAccount(pk);\n        const pubkey = new PublicKey(pk);\n        const v = vestings.filter(v => v.publicKey.equals(pubkey)).pop();\n        onChange(pubkey, availableAmount(v!, deposit));\n      }}\n    >\n      {vestings.length === 0 ? (\n        <MenuItem value={''}>No vesting accounts found</MenuItem>\n      ) : (\n        vestings.map(v => {\n          return (\n            <MenuItem value={v.publicKey.toString()}>\n              <div\n                style={{\n                  width: '100%',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <div>{`${v.publicKey.toString()}`}</div>\n                <div style={{ float: 'right', color: '#ccc' }}>{`${toDisplay(\n                  availableAmount(v, deposit),\n                  decimals,\n                )}`}</div>\n              </div>\n            </MenuItem>\n          );\n        })\n      )}\n    </Select>\n  );\n}\n\nfunction availableAmount(v: ProgramAccount, deposit?: boolean): BN {\n  return deposit\n    ? v.account.outstanding.sub(v.account.whitelistOwned)\n    : v.account.whitelistOwned;\n}\n"]},"metadata":{},"sourceType":"module"}