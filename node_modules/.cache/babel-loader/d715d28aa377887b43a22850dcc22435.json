{"ast":null,"code":"var _jsxFileName = \"F:\\\\jobs\\\\stake_in_solana\\\\source\\\\src\\\\pages\\\\Multisig.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport Multisig from '../components/multisig/Multisig';\nimport { PublicKey } from '@solana/web3.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MultisigPage() {\n  return /*#__PURE__*/_jsxDEV(Multisig, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n_c = MultisigPage;\nexport function MultisigInstancePage() {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const path = location.pathname.split('/');\n\n  if (path.length !== 3) {\n    history.push(`/multisig`);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  } else {\n    const multisig = new PublicKey(path[2]);\n    return /*#__PURE__*/_jsxDEV(Multisig, {\n      multisig: multisig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(MultisigInstancePage, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c2 = MultisigInstancePage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MultisigPage\");\n$RefreshReg$(_c2, \"MultisigInstancePage\");","map":{"version":3,"sources":["F:/jobs/stake_in_solana/source/src/pages/Multisig.tsx"],"names":["React","useHistory","useLocation","Multisig","PublicKey","MultisigPage","MultisigInstancePage","history","location","path","pathname","split","length","push","multisig"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,cAAxC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;AAEA,eAAe,SAASC,YAAT,GAAwB;AACrC,sBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAFuBA,Y;AAIxB,OAAO,SAASC,oBAAT,GAAgC;AAAA;;AACrC,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,IAAI,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAb;;AACA,MAAIF,IAAI,CAACG,MAAL,KAAgB,CAApB,EAAuB;AACrBL,IAAAA,OAAO,CAACM,IAAR,CAAc,WAAd;AACA,wBAAO,qCAAP;AACD,GAHD,MAGO;AACL,UAAMC,QAAQ,GAAG,IAAIV,SAAJ,CAAcK,IAAI,CAAC,CAAD,CAAlB,CAAjB;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEK;AAApB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF;;GAXeR,oB;UACEL,U,EACCC,W;;;MAFHI,oB","sourcesContent":["import React from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport Multisig from '../components/multisig/Multisig';\nimport { PublicKey } from '@solana/web3.js';\n\nexport default function MultisigPage() {\n  return <Multisig />;\n}\n\nexport function MultisigInstancePage() {\n  const history = useHistory();\n  const location = useLocation();\n  const path = location.pathname.split('/');\n  if (path.length !== 3) {\n    history.push(`/multisig`);\n    return <></>;\n  } else {\n    const multisig = new PublicKey(path[2]);\n    return <Multisig multisig={multisig} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}